[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/beloader.js",
    "content": "/**\n*  @file beloader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport 'core/publicpath';\nimport 'es6-promise/auto';\nimport ObjectArray from 'dot-object-array';\nimport uniqid from 'uniqid';\nimport AbstractEventManager from 'core/AbstractEventManager';\nimport AbstractPlugin from 'core/AbstractPlugin';\nimport QueueItem from 'queueitem';\n\n/**\n*  Highly customizable and lightweight assets loader\n*\n*  You can create as many loaders instance as needed. Inside one instance, you can access\n*  specific loaders or functionnalities and order loading sequence with the use\n*  of defer or awaiting options, see {@link Beloader#fetch}.\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractEventManager}\n*\n*  @example\n*  var loader = new Beloader();\n*\n*  // Display a text only when font is ready to avoit FOUT\n*  // It relies on webfontloader\n*  loader.fetch('font', {\n*    webfont: {\n*      google: {\n*        families: ['Droid Sans', 'Droid Serif']\n*      }\n*    }\n*  }).then(function() {\n*    document.body.innerHTML += '<div style=\"font-family:\\'Droid Sans\\'\">Fixture</div>';\n*  });\n*\n*  // ********************\n*  // Load external libraries and only run custom script when they're loaded\n*  // *********************\n*\n*  // Example with defer\n*  // Not the best use case because the two external libraries don't depend on each other\n*  // Lodash loading will not resolve until elementify resolved\n*  loader.fetch('script', {\n*    url: 'https://cdn.jsdelivr.net/npm/elementify@latest',\n*    defer: true;\n*  });\n*\n*  loader.fetch('script', {\n*    url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js',\n*    defer: true;\n*  });\n*\n*  loader.fetch('script', {\n*   url: 'myscript',\n*   defer: true\n*  });\n*\n*  // Example with awaiting\n*  // More suitable to optimize loading\n*  loader.fetch('script', {\n*   url: 'myscript',\n*   awaiting: ['elementify', 'lodash']\n*  });\n*\n*  loader.fetch('script', {\n*    id: 'elementify',\n*    url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n*  });\n*\n*  loader.fetch('script', {\n*    id: 'lodash',\n*    url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js'\n*  });\n*\n*/\nexport default class Beloader extends AbstractEventManager {\n  /**\n  *  Beloader constructor\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {BeloaderOptions}  options Global options for Beloader instance\n  *  @returns {Beloader} Beloader instance\n  */\n  constructor(options = {}) {\n\n    super(options.on);\n    delete options.on;\n\n    /**\n    *  List of queued items in Beloader instance\n    *\n    *  @since 1.0.0\n    *  @type {Array}\n    *\n    */\n    this._items = [];\n\n    /**\n    *  List of named queued items in Beloader instance\n    *\n    *  @since 1.0.0\n    *  @type {Object}\n    */\n    this._awaitables = {};\n\n    /**\n    *  Options for the Beloader instance. See {@link Beloader#constructor}\n    *\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this.options = new ObjectArray(options);\n    this.options.define('autoprocess', true);\n    this.options.define('async', true);\n    this.options.define('defer', false);\n    this.options.define('cache', true);\n    this.options.define('fallbackSync', true);\n\n    /**\n    *  Progress statistics for the Beloader instance.\n    *\n    *  @since 1.0.0\n    *  @type {BeloaderProgress}\n    */\n    this.progress = new ObjectArray({\n      items: {\n        total: 0,\n        waiting: 0,\n        pending: 0,\n        processed: 0,\n        loaded: 0,\n        error: 0,\n        abort: 0,\n        timeout: 0,\n        ready: 0\n      },\n      loading: {\n        complete: 0,\n        elapsed: 0,\n        loaded: 0,\n        rate: 0\n      }\n    });\n\n    /**\n    *  Active Plugins list\n    *\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this._plugins = new ObjectArray();\n\n    // Import plugins set in options\n    if (options.plugins) {\n      let plugins = {};\n\n      // Force array format\n      if (!(options.plugins instanceof Array)) options.plugins = [options.plugins];\n      options.plugins.forEach(plugin => {\n        if (typeof plugin === 'string') {\n          plugins[plugin] = {\n            type: 'plugin',\n            name: plugin\n          };\n        } else {\n          if (plugin.name) {\n            plugins[plugin.name] = {\n              type: 'plugin',\n              name: plugin.name,\n              url: plugin.url,\n              alias: plugin.alias\n            };\n          } else {\n            plugins[Object.keys(plugin)[0]] = {\n              type: 'plugin',\n              name: Object.keys(plugin)[0],\n              url: Object.values(plugin)[0]\n            };\n          }\n        }\n      });\n\n      /**\n      *  Promise resolved when all plugins\n      *  have been resolved\n      *  @since 1.0.0\n      *  @type {Promise} plugins Description for plugins\n      */\n      this.ready = this.fetchAll(plugins).promise;\n    }\n  }\n\n  /**\n  *  Add an item to the loading queue and return a promise\n  *\n  *  An item is resolved (or failed) under several conditions :\n  *  - Item have been loaded\n  *  - Item is ready (webfontloader for instance)\n  *  - If deferred, all previously defferred items in the queue are resolved\n  *  - If awaiting items, all required items are resolved\n  *\n  *  Supported types relies on loaders that may accept/require specific options :\n  *  - `font`, `webfont` : {@link FontLoader} - Async only\n  *  - `css`, `style`, `styles`, `stylesheet` : {@link StylesheetLoader}\n  *  - `js`, `script`, `javascript`, `ecmascript` : {@link ScriptLoader}\n  *  - `json` : {@link JsonLoader} - Async only\n  *  - `img`, `image` : {@link ImageLoader}\n  *  - `plugin` : {@link PluginLoader}\n  *  - `none` : Beloader will simulate\n  *  a loading sequence that is ever successfull. It can be used\n  *  with awaiting to create side-effect and trigger callback\n  *\n  *  Any other value will throw an error, except if a custom loader callback\n  *  is provided in `options.loader`.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {!String} type  Type of item to load (see above)\n  *  @param {String|QueueItemOptions} [options]\n  *  If a string is provided, Beloader will use it as a value\n  *  for the `url` option.\n  */\n  fetch(type, options = {}) {\n    let item;\n\n    if (typeof options === 'string') options = {url: options};\n    options = new ObjectArray(options);\n    options.define('autoprocess', this.options.pull('autoprocess'));\n    options.define('async', this.options.pull('async'));\n    options.define('defer', this.options.pull('defer'));\n    options.define('cache', this.options.pull('cache'));\n    options.define('fallbackSync', this.options.pull('fallbackSync'));\n    options.define('xhr', this.options.pull('xhr'));\n    options.define('loader', this.options.pull('loader'));\n    // Append a unique hash to url if cache set to false\n    if (options.data.url && !options.data.cache) {\n      if (options.data.url.indexOf('?') > 0) options.data.url += '&' + uniqid();\n      else options.data.url += '?' + uniqid();\n    }\n\n    item = new QueueItem(type, this, options);\n    this._items.push(item);\n    if (options.data.id) this._awaitables[options.data.id] = false;\n    this.fire('itemadded', this, item);\n\n    this.progress.push('items.total', this._items.length);\n    this.progress.push('items.waiting', this.progress.pull('items.waiting') + 1);\n\n    return item;\n  }\n\n  /**\n  *  Convenient method for bulk loading\n  *\n  *  provided object must have id as keys and provide the type\n  *  parameter as an option value.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Object} items Items to load\n  *  @returns {QueueItem[]} Items loaded\n  *  The array expose a promise property that is resolved\n  *  with Promise.all\n  *  @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\n  *  @example\n  *  var loader = new Beloader({\n  *   defer: true // load in same order than declared\n  *  });\n  *\n  *  loader.fetchAll({\n  *   elementify: {\n  *     type: 'js',\n  *     url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n  *   },\n  *   Droid: {\n  *     type: 'font',\n  *     webfont: {\n  *       google: {\n  *         families: ['Droid Sans', 'Droid Serif']\n  *       }\n  *     }\n  *   }).promise.then((...items) => start());\n  *\n  */\n  fetchAll(items) {\n    let queuedItems = [];\n    let promises = [];\n\n    items = new ObjectArray(items);\n    items.forEach(function (options, id) {\n      let item, type = options.type;\n\n      delete options.type;\n      options.id = id;\n      item = this.fetch(type, options);\n      queuedItems.push(item);\n      promises.push(item.promise);\n    }.bind(this));\n\n    queuedItems.promise = Promise.all(promises);\n    return queuedItems;\n  }\n\n  /**\n  *  Process all items in the queue that are waiting.\n  *  Obviously, it must be used with `autoprocess` set to `false`\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  process() {\n    this._items.forEach(item => {\n      /* istanbul ignore else */\n      if (item.state.waiting) item.process();\n    });\n  }\n\n  /**\n  *  Import plugin into Beloader instance and extends\n  *  native method of Beloader, QueueItem and Loader\n  *  instances with plugin instance.\n  *\n  *  The plugin will extends an {@link AbtractPlugin} instance and\n  *  therefor will be able to throw events.\n  *\n  *  A plugin will only be available in QueueItem and Loader\n  *  instances created __after__ plugin import.\n  *\n  *  The `init` method of a plugin is automatically\n  *  called after plugin import.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} name Name for the plugin\n  *  @param {Object|Function} Plugin Plugin constructor or singleton\n  *  @param {Object} [options={}] Plugin's options passed to constructor\n  *  @return {Object} Plugin instance\n  *  @throws {Error}  If unable to load plugin\n  */\n  pluginize(name, Plugin, options = {}) {\n    let plugin = AbstractPlugin;\n\n    options = new ObjectArray(options);\n    options.push('name', name);\n    options.define('alias', options.data.name);\n\n    try {\n      if (Plugin instanceof AbstractPlugin) {\n        plugin = new Plugin(this, options);\n        this._plugins.push(name, plugin);\n      } else {\n        plugin = new AbstractPlugin(this, options);\n        if (Plugin instanceof Function) Plugin = new Plugin();\n        for (let p in Plugin) {\n          /* istanbul ignore else */\n          if (Plugin.hasOwnProperty(p)) plugin[p] = Plugin[p];\n        }\n        this._plugins.push(name, plugin);\n      }\n      /* istanbul ignore else */\n      if (plugin.init instanceof Function) plugin.init(options);\n      /** @ignore */\n      /* istanbul ignore else */\n      this[options.data.alias] = plugin;\n      return plugin;\n    } catch (e) {\n      throw new Error('Unable to pluginize : ' + name + ' [' + e + ']');\n    }\n  }\n\n  /**\n  *  loadstart built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @listens {loadstart}\n  *  @emits {beforeprocess}\n  */\n  _loadstart() {\n    if (!this.progress.has('loading.start')) {\n      this.fire('beforeprocess', this);\n      this.progress.push('loading.start', +new Date());\n    }\n    this.progress.data.items.waiting -= 1;\n    this.progress.data.items.pending += 1;\n  }\n\n  /**\n  *  progress built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @listens {progress}\n  */\n  _progress() {\n    this._updateProgress();\n  }\n\n  /**\n  *  load built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @listens {load}\n  */\n  _load() {\n    this.progress.data.items.loaded += 1;\n  }\n\n  /**\n  *  error built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @listens {error}\n  */\n  _error() {\n    this.progress.data.items.error += 1;\n  }\n\n  /**\n  *  abort built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @listens {abort}\n  */\n  _abort() {\n    this.progress.data.items.abort += 1;\n  }\n\n  /**\n  *  timeout built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @listens {timeout}\n  */\n  _timeout() {\n    this.progress.data.items.timeout += 1;\n  }\n\n  /**\n  *  loadend built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @listens {loadend}\n  *  @emits {ready}\n  *  @emits {afterprocess}\n  */\n  _loadend() {\n    let previousDeferResolved = true;\n\n    // Resolve item or defer resolving\n    this._items.forEach(item => {\n      // Resolvable except if deferred and previous deffered not solved\n      let resolvable = item.defer ? previousDeferResolved : true;\n\n      // Check dependencies and update resolvable if dependencies not loaded\n      if (item.awaiting) {\n        item.awaiting.forEach(function (dependency) {\n          if (!this._awaitables[dependency]) resolvable = false;\n        }.bind(this));\n      }\n\n      // Resolve item\n      if (item.state.processed && !item.state.resolved && resolvable) {\n        // Update progress\n        this.progress.data.items.pending -= 1;\n        this.progress.data.items.processed += 1;\n        this._updateProgress();\n        item.state.resolved = true;\n        if (item.state.loaded) {\n          item._resolve(item);\n          item.state.ready = true;\n          item.fire('ready', item);\n          this.progress.data.items.ready += 1;\n        } else {\n          item._reject(item);\n        }\n      }\n\n      // Update previous defer\n      if (item.defer && !item.state.processed) previousDeferResolved = false;\n    });\n\n    // After event\n    if (this.progress.data.items.processed === this.progress.data.items.total) {\n      this.fire('afterprocess', this);\n      this.progress.push('loading.complete', 100);\n      this.progress.push('loading.end', +new Date());\n      this.progress.push('loading.elapsed', this.progress.data.loading.end - this.progress.data.loading.start);\n    }\n  }\n\n  /**\n  *  Update loading progress statistics\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _updateProgress() {\n    let loaded = 0, total = 0, elapsed;\n\n    elapsed = +new Date() - this.progress.data.loading.start;\n    this._items.forEach(function (item) {\n      loaded += item.progress.data.loaded;\n      total += item.progress.data.total;\n    });\n\n    this.progress.push('loading.elapsed', elapsed); // milliseconds\n    this.progress.push('loading.loaded', loaded); // Bytes\n    this.progress.push('loading.rate', loaded / elapsed * 1000); // Bytes/s\n    /* istanbul ignore else */\n    if (total) {\n      this.progress.push('loading.total', total); // Bytes\n      this.progress.push('loading.complete', loaded / total * 100); // Bytes\n    }\n  }\n}\n\nexport {Beloader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/beloader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Beloader",
    "memberof": "src/beloader.js",
    "static": true,
    "longname": "src/beloader.js~Beloader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/beloader.js",
    "importStyle": "Beloader",
    "description": " Highly customizable and lightweight assets loader\n\n You can create as many loaders instance as needed. Inside one instance, you can access\n specific loaders or functionnalities and order loading sequence with the use\n of defer or awaiting options, see {@link Beloader#fetch}.",
    "examples": [
      " var loader = new Beloader();\n\n // Display a text only when font is ready to avoit FOUT\n // It relies on webfontloader\n loader.fetch('font', {\n   webfont: {\n     google: {\n       families: ['Droid Sans', 'Droid Serif']\n     }\n   }\n }).then(function() {\n   document.body.innerHTML += '<div style=\"font-family:\\'Droid Sans\\'\">Fixture</div>';\n });\n\n // ********************\n // Load external libraries and only run custom script when they're loaded\n // *********************\n\n // Example with defer\n // Not the best use case because the two external libraries don't depend on each other\n // Lodash loading will not resolve until elementify resolved\n loader.fetch('script', {\n   url: 'https://cdn.jsdelivr.net/npm/elementify@latest',\n   defer: true;\n });\n\n loader.fetch('script', {\n   url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js',\n   defer: true;\n });\n\n loader.fetch('script', {\n  url: 'myscript',\n  defer: true\n });\n\n // Example with awaiting\n // More suitable to optimize loading\n loader.fetch('script', {\n  url: 'myscript',\n  awaiting: ['elementify', 'lodash']\n });\n\n loader.fetch('script', {\n   id: 'elementify',\n   url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n });\n\n loader.fetch('script', {\n   id: 'lodash',\n   url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js'\n });"
    ],
    "lineNumber": 82,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractEventManager"
    ]
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#constructor",
    "access": "public",
    "description": " Beloader constructor",
    "lineNumber": 93,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Beloader} Beloader instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BeloaderOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Global options for Beloader instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Beloader"
      ],
      "spread": false,
      "description": "Beloader instance"
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "_items",
    "memberof": "src/beloader.js~Beloader",
    "static": false,
    "longname": "src/beloader.js~Beloader#_items",
    "access": "private",
    "description": " List of queued items in Beloader instance",
    "lineNumber": 105,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "_awaitables",
    "memberof": "src/beloader.js~Beloader",
    "static": false,
    "longname": "src/beloader.js~Beloader#_awaitables",
    "access": "private",
    "description": " List of named queued items in Beloader instance",
    "lineNumber": 113,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "options",
    "memberof": "src/beloader.js~Beloader",
    "static": false,
    "longname": "src/beloader.js~Beloader#options",
    "access": "public",
    "description": " Options for the Beloader instance. See {@link Beloader#constructor}",
    "lineNumber": 121,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "progress",
    "memberof": "src/beloader.js~Beloader",
    "static": false,
    "longname": "src/beloader.js~Beloader#progress",
    "access": "public",
    "description": " Progress statistics for the Beloader instance.",
    "lineNumber": 134,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "BeloaderProgress"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_plugins",
    "memberof": "src/beloader.js~Beloader",
    "static": false,
    "longname": "src/beloader.js~Beloader#_plugins",
    "access": "private",
    "description": " Active Plugins list",
    "lineNumber": 160,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "ready",
    "memberof": "src/beloader.js~Beloader",
    "static": false,
    "longname": "src/beloader.js~Beloader#ready",
    "access": "public",
    "description": " Promise resolved when all plugins\n have been resolved",
    "lineNumber": 198,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "fetch",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#fetch",
    "access": "public",
    "description": " Add an item to the loading queue and return a promise\n\n An item is resolved (or failed) under several conditions :\n - Item have been loaded\n - Item is ready (webfontloader for instance)\n - If deferred, all previously defferred items in the queue are resolved\n - If awaiting items, all required items are resolved\n\n Supported types relies on loaders that may accept/require specific options :\n - `font`, `webfont` : {@link FontLoader} - Async only\n - `css`, `style`, `styles`, `stylesheet` : {@link StylesheetLoader}\n - `js`, `script`, `javascript`, `ecmascript` : {@link ScriptLoader}\n - `json` : {@link JsonLoader} - Async only\n - `img`, `image` : {@link ImageLoader}\n - `plugin` : {@link PluginLoader}\n - `none` : Beloader will simulate\n a loading sequence that is ever successfull. It can be used\n with awaiting to create side-effect and trigger callback\n\n Any other value will throw an error, except if a custom loader callback\n is provided in `options.loader`.",
    "lineNumber": 234,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of item to load (see above)"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "QueueItemOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "If a string is provided, Beloader will use it as a value\n for the `url` option."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "fetchAll",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#fetchAll",
    "access": "public",
    "description": " Convenient method for bulk loading\n\n provided object must have id as keys and provide the type\n parameter as an option value.",
    "examples": [
      " var loader = new Beloader({\n  defer: true // load in same order than declared\n });\n\n loader.fetchAll({\n  elementify: {\n    type: 'js',\n    url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n  },\n  Droid: {\n    type: 'font',\n    webfont: {\n      google: {\n        families: ['Droid Sans', 'Droid Serif']\n      }\n    }\n  }).promise.then((...items) => start());"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"
    ],
    "lineNumber": 298,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{QueueItem[]} Items loaded\n The array expose a promise property that is resolved\n with Promise.all"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "Items to load"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "QueueItem[]"
      ],
      "spread": false,
      "description": "Items loaded\n The array expose a promise property that is resolved\n with Promise.all"
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "process",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#process",
    "access": "public",
    "description": " Process all items in the queue that are waiting.\n Obviously, it must be used with `autoprocess` set to `false`",
    "lineNumber": 325,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "pluginize",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#pluginize",
    "access": "public",
    "description": " Import plugin into Beloader instance and extends\n native method of Beloader, QueueItem and Loader\n instances with plugin instance.\n\n The plugin will extends an {@link AbtractPlugin} instance and\n therefor will be able to throw events.\n\n A plugin will only be available in QueueItem and Loader\n instances created __after__ plugin import.\n\n The `init` method of a plugin is automatically\n called after plugin import.",
    "lineNumber": 356,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name for the plugin"
      },
      {
        "nullable": null,
        "types": [
          "Object",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "Plugin",
        "description": "Plugin constructor or singleton"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "Plugin's options passed to constructor"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Plugin instance"
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "If unable to load plugin"
      }
    ]
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "[options.data.alias]",
    "memberof": "src/beloader.js~Beloader",
    "static": false,
    "longname": "src/beloader.js~Beloader#[options.data.alias]",
    "access": "public",
    "description": null,
    "lineNumber": 380,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "_loadstart",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_loadstart",
    "access": "private",
    "description": " loadstart built-in callback",
    "lineNumber": 396,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "emits": [
      {
        "types": [
          "beforeprocess"
        ],
        "description": ""
      }
    ],
    "listens": [
      {
        "types": [
          "loadstart"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "_progress",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_progress",
    "access": "private",
    "description": " progress built-in callback",
    "lineNumber": 413,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "listens": [
      {
        "types": [
          "progress"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "_load",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_load",
    "access": "private",
    "description": " load built-in callback",
    "lineNumber": 425,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "listens": [
      {
        "types": [
          "load"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "_error",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_error",
    "access": "private",
    "description": " error built-in callback",
    "lineNumber": 437,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "listens": [
      {
        "types": [
          "error"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "_abort",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_abort",
    "access": "private",
    "description": " abort built-in callback",
    "lineNumber": 449,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "listens": [
      {
        "types": [
          "abort"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "_timeout",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_timeout",
    "access": "private",
    "description": " timeout built-in callback",
    "lineNumber": 461,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "listens": [
      {
        "types": [
          "timeout"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "_loadend",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_loadend",
    "access": "private",
    "description": " loadend built-in callback",
    "lineNumber": 475,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "emits": [
      {
        "types": [
          "ready"
        ],
        "description": ""
      },
      {
        "types": [
          "afterprocess"
        ],
        "description": ""
      }
    ],
    "listens": [
      {
        "types": [
          "loadend"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "_updateProgress",
    "memberof": "src/beloader.js~Beloader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/beloader.js~Beloader#_updateProgress",
    "access": "private",
    "description": " Update loading progress statistics",
    "lineNumber": 527,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/core/AbstractEventManager.js",
    "content": "/**\n*  @file AbstractEventManager.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport BeloaderEvent from 'events/BeloaderEvent';\n\n/**\n*  AbstractEventManager provide the core functionnalities to register,\n*  fire and dispatch event.\n*\n*  Beloader event system is purely internal, though easily pluggable into\n*  external scripts\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*/\nexport default class AbstractEventManager {\n  /**\n  *  Constructor\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Object} events\n  *  Events callback list provided to {@link Beloader} or\n  *  {@link QueueItem} constructor options under `on`\n  *  property of the `options` object\n  *  @see {@link Beloader}\n  *  @see {@link QueueItem}\n  */\n  constructor(events) {\n    /**\n    *  Callback's list by eventName\n    *\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this._events = new ObjectArray();\n\n    events = new ObjectArray(events);\n    events.forEach(function (callbacks, eventName) {\n      if (!(callbacks instanceof Array)) callbacks = [callbacks];\n      callbacks.forEach(function (callback) {\n        this.on(eventName, callback);\n      }.bind(this));\n    }.bind(this));\n  }\n\n  /**\n  *  Register events callbacks after instance creation\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} eventName Event name\n  *  @param {Function} callback Even't callback\n  */\n  on(eventName, callback) {\n    let when;\n\n    if (callback.name === 'pre') when = 'pre';\n    else when = 'post';\n\n    this._events.define(eventName, [], when);\n    this._events.data[when][eventName].push(callback);\n  }\n\n  /**\n  *  Fire an event\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} eventName Event name\n  *  @param {Beloader|QueueItem|Loader|Plugin} target Event target\n  *  @param {object|array|number|string} data Extra data\n  */\n  fire(eventName, target, data) {\n    this._dispatch(new BeloaderEvent(eventName, target, data));\n  }\n\n  /**\n  *  Dispatch an event\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {BeloaderEvent} event Event instance\n  */\n  _dispatch(event) {\n    const pre = this._events.pull(event.name, 'pre') || [];\n    const post = this._events.pull(event.name, 'post') || [];\n\n    // Dispatch in context\n    pre.forEach(function (cb) {\n      if (!event._immediatePropagationStopped) cb.call(this, event);\n    }.bind(this));\n\n    if (\n      !event._immediatePropagationStopped &&\n      !event._defaultPrevented &&\n      this['_' + event.name] instanceof Function\n    ) {\n      this['_' + event.name].call(this, event);\n    }\n\n    if (!event._immediatePropagationStopped) {\n      post.forEach(function (cb) {\n        if (!event._immediatePropagationStopped) cb.call(this, event);\n      }.bind(this));\n    }\n\n    // Bubbles up to parent if it exists and propagation not prevented\n    if (!event._propagationStopped && this.parent) {\n      this.parent._dispatch.call(this.parent, event);\n    }\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/core/AbstractEventManager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "class",
    "name": "AbstractEventManager",
    "memberof": "src/core/AbstractEventManager.js",
    "static": true,
    "longname": "src/core/AbstractEventManager.js~AbstractEventManager",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/core/AbstractEventManager.js",
    "importStyle": "AbstractEventManager",
    "description": " AbstractEventManager provide the core functionnalities to register,\n fire and dispatch event.\n\n Beloader event system is purely internal, though easily pluggable into\n external scripts",
    "lineNumber": 21,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 72,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/AbstractEventManager.js~AbstractEventManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractEventManager.js~AbstractEventManager#constructor",
    "access": "public",
    "description": " Constructor",
    "see": [
      "{@link Beloader}",
      "{@link QueueItem}"
    ],
    "lineNumber": 36,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": "Events callback list provided to {@link Beloader} or\n {@link QueueItem} constructor options under `on`\n property of the `options` object"
      }
    ]
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "_events",
    "memberof": "src/core/AbstractEventManager.js~AbstractEventManager",
    "static": false,
    "longname": "src/core/AbstractEventManager.js~AbstractEventManager#_events",
    "access": "private",
    "description": " Callback's list by eventName",
    "lineNumber": 43,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "on",
    "memberof": "src/core/AbstractEventManager.js~AbstractEventManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractEventManager.js~AbstractEventManager#on",
    "access": "public",
    "description": " Register events callbacks after instance creation",
    "lineNumber": 64,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventName",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Even't callback"
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "fire",
    "memberof": "src/core/AbstractEventManager.js~AbstractEventManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractEventManager.js~AbstractEventManager#fire",
    "access": "public",
    "description": " Fire an event",
    "lineNumber": 85,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventName",
        "description": "Event name"
      },
      {
        "nullable": null,
        "types": [
          "Beloader",
          "QueueItem",
          "Loader",
          "Plugin"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Event target"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "array",
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Extra data"
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "_dispatch",
    "memberof": "src/core/AbstractEventManager.js~AbstractEventManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractEventManager.js~AbstractEventManager#_dispatch",
    "access": "private",
    "description": " Dispatch an event",
    "lineNumber": 98,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BeloaderEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event instance"
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/core/AbstractLoader.js",
    "content": "/**\n*  @file AbstractLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0-only {@link https://spdx.org/licenses/AGPL-3.0-only.html}\n*/\n\nimport AbstractEventManager from 'core/AbstractEventManager';\n\n/**\n*  AbstractLoader provides the core functionnalities of a loader\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractEventManager}\n*/\nexport default class AbstractLoader extends AbstractEventManager {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} item Requesting item\n  *  @param {DotObjectArray} options Options for the loader\n  */\n  constructor(parent, options) {\n\n    super();\n\n    /**\n    *  Requesting parent item\n    *  @since 1.0.0\n    *  @type {QueueItem}\n    */\n    this.parent = parent;\n\n    /**\n    *  Map plugins\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this._plugins = parent._plugins;\n    this._plugins.forEach(function (plugin, name) {\n      /** @ignore */\n      this[name] = plugin;\n    }.bind(this));\n\n    /**\n    *  Loader options\n    *\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this.options = options;\n  }\n\n  /**\n  *  Loader promise\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @type {Promise}\n  */\n  get promise() {\n    if (this.options.data.async) return this.async();\n    return this.sync();\n  }\n\n  /**\n  *  The sync method mostly relies on adding an HTMLElement to the DOM to load asset.\n  *  When using this way of loading, the loader must expose a node property that provide\n  *  the right HTMLElement to create.\n  *\n  *  It then tries to hook events callbacks but they won't be all supported by browser given\n  *  the required HTMLElement (script, link, audio...). Usually only `load` and\n  *  `error` callbacks will be functionals.\n  *\n  *  This basic behaviour can be override by providing a custom loader callback\n  *  in `options.loader.sync` or by creating a specific loader that\n  *  doesn't call `super.sync()`.\n  *\n  *  In that case, the custom loader must take care to return a promise and optionally fire _loadstart_ event\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @abstract\n  *  @returns {Promise} Loading promise\n  *  @emits {loadstart} CSS Font requesting begins\n  *  @emits {progress} If progress callback available\n  *  @emits {abort} If abort callback available\n  *  @emits {timeout} If timeout callback available\n  */\n  sync() {\n    const _this = this;\n\n    // Sync loader override\n    if (this.options.pull('loader.sync') instanceof Function) return this.options.pull('loader.sync').call(this);\n\n    return new Promise((resolve, reject) => {\n      _this.fire('loadstart', _this);\n      _this.node.onprogress = (ev) => _this.fire('progress', _this, ev);\n      _this.node.onload = (ev) => resolve();\n      _this.node.onerror = (ev) => reject(ev);\n      _this.node.onabort = (ev) => {\n        _this.fire('abort', _this, ev);\n        reject(ev);\n      };\n      _this.node.ontimeout = (ev) => {\n        _this.fire('timeout', _this, ev);\n        reject(ev);\n      };\n    });\n  }\n\n  /**\n  *  The async method relies on fetching content with an XHR request\n  *  and inserting it inline in the document, wrapped in right\n  *  HTML container if needed\n  *\n  *  It is possible to use the {@link loadstart} event to hook some\n  *  additional initializations\n  *\n  *  At last, the xhr loader can be replaced by a custom loader\n  *  ([npm request](https://www.npmjs.com/package/request) for instance) for\n  *  advanced usage.\n  *  In that case, the custom loader must return a promise and take care of firing\n  *  events as needed (except {@link load}, {@link error} and {@link loadend}\n  *  that will be triggered from the QueueItem parent instance).\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @abstract\n  *  @returns {Promise} Loading promise\n  *  @emits {loadstart}\n  *  @emits {loadstarted}\n  *  @emits {readystatechange}\n  *  @emits {progress}\n  *  @emits {abort}\n  *  @emits {timeout}\n  */\n  async() {\n    const _this = this;\n    let p1, p2 = new Promise((resolve, reject) => {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n\n    // Async loader override\n    if (this.options.pull('loader.async') instanceof Function) return this.options.pull('loader.async')(this);\n\n    // Async promise\n    p1 = new Promise((resolve, reject) => {\n      _this.xhr = new XMLHttpRequest();\n\n      // Configure basic XHR instance for request\n      if (!_this.options.has('xhr.instance')) {\n        _this.options.define('xhr.method', 'GET');\n\n        // Events\n        _this.xhr.onprogress = (ev) => _this.fire('progress', _this, ev);\n        _this.xhr.onerror = (ev) => reject('error');\n        _this.xhr.onabort = (ev) => reject('abort');\n        _this.xhr.ontimeout = (ev) => reject('timeout');\n\n        _this.xhr.open(_this.options.pull('xhr.method'), _this.options.data.url, true);\n\n        _this.xhr.onreadystatechange = () => {\n          _this.fire('readystatechange', _this, _this.xhr);\n\n          if (_this.xhr.readyState === 4) {\n            if (_this.xhr.status >= 200 && _this.xhr.status < 400) {\n              resolve(_this.xhr.response);\n            } else reject('error');\n          }\n        };\n      }\n\n      _this.fire('loadstart', _this);\n      _this.xhr.send(_this.options.pull('xhr.data'));\n      _this.fire('loadstarted', _this);\n    });\n\n    p1.then(\n      response => {\n        _this._resolve(response);\n      },\n      error => {\n        if (_this.options.data.fallbackSync) {\n          _this.options.data.async = false;\n          delete _this._node; // reset node\n          _this.sync().then(\n            success => {\n              _this._resolve(false);\n            },\n            error => {\n              _this._reject(error);\n            }\n          );\n        } else {\n          if (error !== 'error') _this.fire(error, _this, _this.xhr);\n          _this._reject(_this.xhr.status);\n        }\n      }\n    );\n\n    return p2;\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/core/AbstractLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "class",
    "name": "AbstractLoader",
    "memberof": "src/core/AbstractLoader.js",
    "static": true,
    "longname": "src/core/AbstractLoader.js~AbstractLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/core/AbstractLoader.js",
    "importStyle": "AbstractLoader",
    "description": " AbstractLoader provides the core functionnalities of a loader",
    "lineNumber": 17,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractEventManager"
    ]
  },
  {
    "__docId__": 79,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "Requesting item"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the loader"
      }
    ]
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "parent",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#parent",
    "access": "public",
    "description": " Requesting parent item",
    "lineNumber": 35,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "QueueItem"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "_plugins",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#_plugins",
    "access": "private",
    "description": " Map plugins",
    "lineNumber": 42,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "options",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#options",
    "access": "public",
    "description": " Loader options",
    "lineNumber": 54,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "get",
    "name": "promise",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#promise",
    "access": "public",
    "description": " Loader promise",
    "lineNumber": 64,
    "since": "1.0.0",
    "version": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "sync",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#sync",
    "access": "public",
    "description": " The sync method mostly relies on adding an HTMLElement to the DOM to load asset.\n When using this way of loading, the loader must expose a node property that provide\n the right HTMLElement to create.\n\n It then tries to hook events callbacks but they won't be all supported by browser given\n the required HTMLElement (script, link, audio...). Usually only `load` and\n `error` callbacks will be functionals.\n\n This basic behaviour can be override by providing a custom loader callback\n in `options.loader.sync` or by creating a specific loader that\n doesn't call `super.sync()`.\n\n In that case, the custom loader must take care to return a promise and optionally fire _loadstart_ event",
    "lineNumber": 95,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "abstract": true,
    "emits": [
      {
        "types": [
          "loadstart"
        ],
        "description": "CSS Font requesting begins"
      },
      {
        "types": [
          "progress"
        ],
        "description": "If progress callback available"
      },
      {
        "types": [
          "abort"
        ],
        "description": "If abort callback available"
      },
      {
        "types": [
          "timeout"
        ],
        "description": "If timeout callback available"
      }
    ],
    "params": []
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "async",
    "memberof": "src/core/AbstractLoader.js~AbstractLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractLoader.js~AbstractLoader#async",
    "access": "public",
    "description": " The async method relies on fetching content with an XHR request\n and inserting it inline in the document, wrapped in right\n HTML container if needed\n\n It is possible to use the {@link loadstart} event to hook some\n additional initializations\n\n At last, the xhr loader can be replaced by a custom loader\n ([npm request](https://www.npmjs.com/package/request) for instance) for\n advanced usage.\n In that case, the custom loader must return a promise and take care of firing\n events as needed (except {@link load}, {@link error} and {@link loadend}\n that will be triggered from the QueueItem parent instance).",
    "lineNumber": 145,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "abstract": true,
    "emits": [
      {
        "types": [
          "loadstart"
        ],
        "description": ""
      },
      {
        "types": [
          "loadstarted"
        ],
        "description": ""
      },
      {
        "types": [
          "readystatechange"
        ],
        "description": ""
      },
      {
        "types": [
          "progress"
        ],
        "description": ""
      },
      {
        "types": [
          "abort"
        ],
        "description": ""
      },
      {
        "types": [
          "timeout"
        ],
        "description": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/core/AbstractPlugin.js",
    "content": "/**\n*  @file AbstractPlugin.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport AbstractEventManager from 'core/AbstractEventManager';\n\n/**\n*  AbstractPlugin provides the core functionnalities of a plugin\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*/\nexport default class AbstractPlugin extends AbstractEventManager {\n  /**\n  *  Constructor\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {Beloader|QueueItem|Loader} Parent instance for plugin\n  *  @param {Object|DotObjectArray} options Options for the plugin\n  */\n  constructor(parent, options = {}) {\n    super();\n    /**\n    *  Parent\n    *  @type {Beloader} Beloader instance\n    *  @since 1.0.0\n    */\n    this.parent = parent;\n\n    /**\n    *  Map plugins\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this._plugins = parent._plugins;\n    this._plugins.forEach(function (plugin, name) {\n      /** @ignore */\n      this[name] = plugin;\n    }.bind(this));\n\n    /**\n    *  Stores the plugin options\n    *  @type {DotObjectArray}\n    *  @since 1.0.0\n    */\n    this.options = new ObjectArray(options);\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/core/AbstractPlugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "class",
    "name": "AbstractPlugin",
    "memberof": "src/core/AbstractPlugin.js",
    "static": true,
    "longname": "src/core/AbstractPlugin.js~AbstractPlugin",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/core/AbstractPlugin.js",
    "importStyle": "AbstractPlugin",
    "description": " AbstractPlugin provides the core functionnalities of a plugin",
    "lineNumber": 17,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "core/AbstractEventManager~AbstractEventManager"
    ]
  },
  {
    "__docId__": 89,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/AbstractPlugin.js~AbstractPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/AbstractPlugin.js~AbstractPlugin#constructor",
    "access": "public",
    "description": " Constructor",
    "lineNumber": 28,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Beloader",
          "QueueItem",
          "Loader"
        ],
        "spread": false,
        "optional": false,
        "name": "Parent",
        "description": "instance for plugin"
      },
      {
        "nullable": null,
        "types": [
          "Object",
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the plugin"
      }
    ]
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "parent",
    "memberof": "src/core/AbstractPlugin.js~AbstractPlugin",
    "static": false,
    "longname": "src/core/AbstractPlugin.js~AbstractPlugin#parent",
    "access": "public",
    "description": " Parent",
    "lineNumber": 35,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Beloader"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "_plugins",
    "memberof": "src/core/AbstractPlugin.js~AbstractPlugin",
    "static": false,
    "longname": "src/core/AbstractPlugin.js~AbstractPlugin#_plugins",
    "access": "private",
    "description": " Map plugins",
    "lineNumber": 42,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/core/AbstractPlugin.js~AbstractPlugin",
    "static": false,
    "longname": "src/core/AbstractPlugin.js~AbstractPlugin#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "options",
    "memberof": "src/core/AbstractPlugin.js~AbstractPlugin",
    "static": false,
    "longname": "src/core/AbstractPlugin.js~AbstractPlugin#options",
    "access": "public",
    "description": " Stores the plugin options",
    "lineNumber": 53,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/core/publicpath.js",
    "content": "/**\n*  @file publicpath.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\n/**\n*  This script initialize webpack public path for CDN usage compatibility\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*/\n\nlet scripts = document.getElementsByTagName('script');\n/** @ignore */\nlet r = new RegExp('^(?:[a-z]+:)?//', 'i');\nlet wpp;\n\nexport function check(uri) {\n  // Dot not forget to change target string beloader\n  let tmp = uri.match(/((http.+)beloader(?:[@\\.\\w]+|$))/);\n\n  // Only set public path if beloader path is absolute\n  if (tmp && tmp[1] && r.test(tmp[1])) {\n    if (tmp[1].indexOf('dist') >= 0) return tmp[2];\n    return tmp[1] + '/dist/';\n  }\n  return false;\n}\n\nfor (let i = 0; i < scripts.length; i++) {\n  wpp = check(scripts[i].src);\n\n  if (wpp) {\n    __webpack_public_path__ = wpp; // eslint-disable-line\n    break;\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/core/publicpath.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "scripts",
    "memberof": "src/core/publicpath.js",
    "static": true,
    "longname": "src/core/publicpath.js~scripts",
    "access": "public",
    "export": false,
    "importPath": "beloader/src/core/publicpath.js",
    "importStyle": null,
    "description": " This script initialize webpack public path for CDN usage compatibility",
    "lineNumber": 15,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "r",
    "memberof": "src/core/publicpath.js",
    "static": true,
    "longname": "src/core/publicpath.js~r",
    "access": "public",
    "export": false,
    "importPath": "beloader/src/core/publicpath.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "check",
    "memberof": "src/core/publicpath.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/publicpath.js~check",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/core/publicpath.js",
    "importStyle": "{check}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "uri",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/events/BeloaderEvent.js",
    "content": "/**\n*  @file BeloaderEvent.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\n/**\n*  An event is generated and provided to each callback function\n*  attached to this event.\n*\n*  The Beloader event mimics the native Event methods to override\n*  default execution and propagation.\n*\n*  You can force the callback to execute __before__ the built-in\n*  behaviour by naming the function `pre`. Any closure or other named\n*  functions will be called __after__ the built-in callbacks.\n*\n*  @example\n*  var loader = new Beloader();\n*\n*  loader.on('afterprocess', (event) => {\n*    // called after the 'afterprocess' built-in callbacks\n*    event.preventDefault(); // will do nothing\n*  });\n*\n*  loader.on('afterprocess', function pre(event) {\n*    // called before the 'afterprocess' built-in callbacks\n*    event.preventDefault(); // will stop built-in triggering\n*  });\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @see {@link AbstractEventManager}\n*\n*/\nexport default class BeloaderEvent {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} name Name of the event\n  *  @param {Beloader|QueueItem|Loader|Plugin} target Target of the event\n  *  @param {object|Array|number|string} data Data if available\n  */\n  constructor(name, target, data = null) {\n    /**\n    *  Name of the event\n    *  @since 1.0.0\n    *  @type {string}\n    */\n    this.name = name;\n\n    /**\n    *  Target of the event\n    *  @since 1.0.0\n    *  @type {Beloader|QueueItem|Loader|Plugin}\n    */\n    this.target = target;\n\n    /**\n    *  Data of the event if available\n    *  @since 1.0.0\n    *  @type {object|number|string}\n    */\n    this.data = data;\n\n    /**\n    *  Timestamp of Event creation\n    *  @since 1.0.0\n    *  @type {timestamp}\n    */\n    this.timestamp = +new Date();\n\n    /**\n    *  Prevent default behaviour trigger\n    *  @since 1.0.0\n    *  @type {boolean}\n    */\n    this._defaultPrevented = false;\n\n    /**\n    *  Prevent default bubbling trigger\n    */\n    this._propagationStopped = false;\n\n    /**\n    *  Prevent callbacks processing trigger\n    *  @since 1.0.0\n    *  @type {boolean}\n    */\n    this._immediatePropagationStopped = false;\n  }\n\n  /**\n  *  Prevent the default built-in behaviour to trigger\n  *  It only works if called within a callback function named `pre`\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {this} Chainable\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault\n  */\n  preventDefault() {\n    this._defaultPrevented = true;\n    return this;\n  }\n\n  /**\n  *  Prevent the bubbling of the Event to parent\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {this} Chainable\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n  */\n  stopPropagation() {\n    this._propagationStopped = true;\n    return this;\n  }\n\n  /**\n  *  Prevent any further callbacks to be called and stop propagation\n  *  The callbacks are called in the same order that they have been registered\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {this} Chainable\n  *  @see https://developer.mozilla.org/en-US/docs/Web/API/Event/stopImmediatePropagation\n  */\n  stopImmediatePropagation() {\n    this._immediatePropagationStopped = true;\n    return this.stopPropagation();\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/events/BeloaderEvent.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "BeloaderEvent",
    "memberof": "src/events/BeloaderEvent.js",
    "static": true,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/events/BeloaderEvent.js",
    "importStyle": "BeloaderEvent",
    "description": " An event is generated and provided to each callback function\n attached to this event.\n\n The Beloader event mimics the native Event methods to override\n default execution and propagation.\n\n You can force the callback to execute __before__ the built-in\n behaviour by naming the function `pre`. Any closure or other named\n functions will be called __after__ the built-in callbacks.",
    "examples": [
      " var loader = new Beloader();\n\n loader.on('afterprocess', (event) => {\n   // called after the 'afterprocess' built-in callbacks\n   event.preventDefault(); // will do nothing\n });\n\n loader.on('afterprocess', function pre(event) {\n   // called before the 'afterprocess' built-in callbacks\n   event.preventDefault(); // will stop built-in triggering\n });"
    ],
    "see": [
      "{@link AbstractEventManager}"
    ],
    "lineNumber": 37,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event"
      },
      {
        "nullable": null,
        "types": [
          "Beloader",
          "QueueItem",
          "Loader",
          "Plugin"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Target of the event"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "Array",
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data if available"
      }
    ]
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "name",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#name",
    "access": "public",
    "description": " Name of the event",
    "lineNumber": 53,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "target",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#target",
    "access": "public",
    "description": " Target of the event",
    "lineNumber": 60,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Beloader",
        "QueueItem",
        "Loader",
        "Plugin"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "data",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#data",
    "access": "public",
    "description": " Data of the event if available",
    "lineNumber": 67,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "object",
        "number",
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "timestamp",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#timestamp",
    "access": "public",
    "description": " Timestamp of Event creation",
    "lineNumber": 74,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "timestamp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "_defaultPrevented",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#_defaultPrevented",
    "access": "private",
    "description": " Prevent default behaviour trigger",
    "lineNumber": 81,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "_propagationStopped",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#_propagationStopped",
    "access": "private",
    "description": " Prevent default bubbling trigger",
    "lineNumber": 86,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "_immediatePropagationStopped",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#_immediatePropagationStopped",
    "access": "private",
    "description": " Prevent callbacks processing trigger",
    "lineNumber": 93,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "preventDefault",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#preventDefault",
    "access": "public",
    "description": " Prevent the default built-in behaviour to trigger\n It only works if called within a callback function named `pre`",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault"
    ],
    "lineNumber": 107,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this} Chainable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "Chainable"
    },
    "params": []
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "stopPropagation",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#stopPropagation",
    "access": "public",
    "description": " Prevent the bubbling of the Event to parent",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation"
    ],
    "lineNumber": 122,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this} Chainable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "Chainable"
    },
    "params": []
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "stopImmediatePropagation",
    "memberof": "src/events/BeloaderEvent.js~BeloaderEvent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/events/BeloaderEvent.js~BeloaderEvent#stopImmediatePropagation",
    "access": "public",
    "description": " Prevent any further callbacks to be called and stop propagation\n The callbacks are called in the same order that they have been registered",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Event/stopImmediatePropagation"
    ],
    "lineNumber": 138,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{this} Chainable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "Chainable"
    },
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/events/typedef.doc.js",
    "content": "/**\n*  The `loadstart` event is fired :\n*  - In sync and async loading mode\n*  - Just after insertion of the requesting inline tag for sync loading\n*  - After XMLHttpRequest instance initialization but before sending request for async loading\n*\n*\n*  If you want to tweak XHR instance without providing a full one, you can use this callback. The\n*  XHR instance will be available as a loader property (see example).\n*\n*  @typedef {BeloaderEvent} loadstart\n*  @property {Loader} target Loader instance\n*\n*  @example\n*  var loader = new Beloader() ;\n*\n*  loader.fetch('json', {\n*   url: 'http://jsonserverwithbadheaders.com/api',\n*   on: {\n*     loadstart: function(event) {\n*       // loader is available in event.target\n*       // Override the default json responseType value to prevent errors\n*       event.target.xhr.responseType = \"text\"\n*     }\n*   }\n*  }).then((item) => var myGoodJson = strangeStringProcess(item.loader.xhr.response));\n*/\n\n/**\n*  The `loadstarted` event is fired :\n*  - Only in async mode\n*  - Just after sending the request\n*\n*  @typedef {BeloaderEvent} loadstarted\n*  @property {Loader} target Loader instance\n*/\n\n/**\n*  @external {ProgressEvent} https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent\n*/\n\n/**\n*  The `progress` event is fired :\n*  - Always in async mode\n*  - If available in sync mode\n*\n*  @typedef {BeloaderEvent} progress\n*  @property {Loader} target Loader instance\n*  @property {ProgressEvent} data Native `progress` event\n*/\n\n/**\n*  The `progress` event is fired only in async mode\n*\n*  @typedef {BeloaderEvent} readystatechange\n*  @property {Loader} target Loader instance\n*  @property {XMLHttpRequest} data Loader xhr instance\n*/\n\n/**\n*  The `load` event is fired :\n*  - Only if loading is succesful\n*  - Only if loader complete all its task (rendering fonts for instance)\n*\n*  @typedef {BeloaderEvent} load\n*  @property {QueueItem} target QueueItem instance\n*/\n\n/**\n*  The `error` event is fired if loading is not completed. It will be fired\n*  in case of error, abort or timeout\n*\n*  @typedef {BeloaderEvent} error\n*  @property {QueueItem} target QueueItem instance\n*  @property {mixed}  data  Additionnal informations or native event\n*/\n\n/**\n*  The `timeout` event is fired in case of timeout\n*\n*  @typedef {BeloaderEvent} timeout\n*  @property {Loader} target Loader instance\n*  @property {Event} data Native `timeout` event\n*/\n\n/**\n*  The `abort` event is fired in case of abort\n*\n*  @typedef {BeloaderEvent} abort\n*  @property {Loader} target Loader instance\n*  @property {Event} data Native `abort` event\n*/\n\n/**\n*  The `loadend event` is emitted at the very end\n*  of the loading request. It will occur whenever\n*  the loading succeeds or fails\n*\n*  @typedef {BeloaderEvent} loadend\n*  @property {QueueItem} target QueueItem instance\n*/\n\n/**\n*  The`ready` event is fired at the very end of the\n*  item initialization\n*\n*  @typedef {BeloaderEvent} ready\n*  @property {QueueItem} target QueueItem instance\n*/\n\n/**\n*  The `beforeprocess` event is fired once at the\n*  very beginning of the loading queue process\n*\n*  @typedef {BeloaderEvent} beforeprocess\n*  @property {Beloader} target  Beloader instance\n*/\n\n/**\n*  The `afterprocess` event is fired once at the\n*  very end of the loading queue process\n*\n*  @typedef {BeloaderEvent} afterprocess\n*  @property {Beloader} target  Beloader instance\n*/\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/events/typedef.doc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "typedef",
    "name": "loadstart",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~loadstart",
    "access": "public",
    "description": " The `loadstart` event is fired :\n - In sync and async loading mode\n - Just after insertion of the requesting inline tag for sync loading\n - After XMLHttpRequest instance initialization but before sending request for async loading\n\n\n If you want to tweak XHR instance without providing a full one, you can use this callback. The\n XHR instance will be available as a loader property (see example).",
    "examples": [
      " var loader = new Beloader() ;\n\n loader.fetch('json', {\n  url: 'http://jsonserverwithbadheaders.com/api',\n  on: {\n    loadstart: function(event) {\n      // loader is available in event.target\n      // Override the default json responseType value to prevent errors\n      event.target.xhr.responseType = \"text\"\n    }\n  }\n }).then((item) => var myGoodJson = strangeStringProcess(item.loader.xhr.response));"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Loader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Loader instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "loadstart"
    }
  },
  {
    "__docId__": 116,
    "kind": "typedef",
    "name": "loadstarted",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~loadstarted",
    "access": "public",
    "description": " The `loadstarted` event is fired :\n - Only in async mode\n - Just after sending the request",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Loader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Loader instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "loadstarted"
    }
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "ProgressEvent",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~ProgressEvent",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 118,
    "kind": "typedef",
    "name": "progress",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~progress",
    "access": "public",
    "description": " The `progress` event is fired :\n - Always in async mode\n - If available in sync mode",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Loader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Loader instance"
      },
      {
        "nullable": null,
        "types": [
          "ProgressEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Native `progress` event"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "progress"
    }
  },
  {
    "__docId__": 119,
    "kind": "typedef",
    "name": "readystatechange",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~readystatechange",
    "access": "public",
    "description": " The `progress` event is fired only in async mode",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Loader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Loader instance"
      },
      {
        "nullable": null,
        "types": [
          "XMLHttpRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Loader xhr instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "readystatechange"
    }
  },
  {
    "__docId__": 120,
    "kind": "typedef",
    "name": "load",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~load",
    "access": "public",
    "description": " The `load` event is fired :\n - Only if loading is succesful\n - Only if loader complete all its task (rendering fonts for instance)",
    "properties": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "QueueItem instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "load"
    }
  },
  {
    "__docId__": 121,
    "kind": "typedef",
    "name": "error",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~error",
    "access": "public",
    "description": " The `error` event is fired if loading is not completed. It will be fired\n in case of error, abort or timeout",
    "properties": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "QueueItem instance"
      },
      {
        "nullable": null,
        "types": [
          "mixed"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Additionnal informations or native event"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "error"
    }
  },
  {
    "__docId__": 122,
    "kind": "typedef",
    "name": "timeout",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~timeout",
    "access": "public",
    "description": " The `timeout` event is fired in case of timeout",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Loader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Loader instance"
      },
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Native `timeout` event"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "timeout"
    }
  },
  {
    "__docId__": 123,
    "kind": "typedef",
    "name": "abort",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~abort",
    "access": "public",
    "description": " The `abort` event is fired in case of abort",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Loader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Loader instance"
      },
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Native `abort` event"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "abort"
    }
  },
  {
    "__docId__": 124,
    "kind": "typedef",
    "name": "loadend",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~loadend",
    "access": "public",
    "description": " The `loadend event` is emitted at the very end\n of the loading request. It will occur whenever\n the loading succeeds or fails",
    "properties": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "QueueItem instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "loadend"
    }
  },
  {
    "__docId__": 125,
    "kind": "typedef",
    "name": "ready",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~ready",
    "access": "public",
    "description": " The`ready` event is fired at the very end of the\n item initialization",
    "properties": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "QueueItem instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "ready"
    }
  },
  {
    "__docId__": 126,
    "kind": "typedef",
    "name": "beforeprocess",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~beforeprocess",
    "access": "public",
    "description": " The `beforeprocess` event is fired once at the\n very beginning of the loading queue process",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Beloader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Beloader instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "beforeprocess"
    }
  },
  {
    "__docId__": 127,
    "kind": "typedef",
    "name": "afterprocess",
    "memberof": "src/events/typedef.doc.js",
    "static": true,
    "longname": "src/events/typedef.doc.js~afterprocess",
    "access": "public",
    "description": " The `afterprocess` event is fired once at the\n very end of the loading queue process",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Beloader"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Beloader instance"
      }
    ],
    "type": {
      "types": [
        "BeloaderEvent"
      ],
      "optional": false,
      "name": "afterprocess"
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/loaders/CustomLoader.js",
    "content": "/**\n*  @file CustomLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractLoader from 'core/AbstractLoader';\n\n/**\n*  Custom loader let user provide a custom callback\n*  as a loader instance\n*\n*  The callback must be provided through `options.loader` and\n*  must return a promise. It can also throw events if needed.\n*\n*  It will always be called whenever `options.async` is set to `true`\n*  or `false`. Only calling QueueItem will be exposed in the\n*  latter promise. For bringing back data, you can use event or\n*  add a custom property to the QueueItem. You can access item via the\n*  `parent` property of the loader.\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractLoader}\n*\n*  @example\n*  var loader = new Beloader();\n*  var myLoader = function() {\n*   return new Promise(function(resolve, reject) {\n*     // Do things\n*     this.parent.response = things;\n*     if(OK) resolve();\n*     else reject('error on things'); // Will be available in item.error\n*   }.bind(this));\n*  }\n*\n*  loader.fetch('custom', {loader: myLoader})\n*   .promise\n*   .then(\n*     function(item) { item.response // yields \"things\" value },\n*     function(item) { console.log(item.error) // display \"error on things\" }\n*   );\n*/\nexport default class CustomLoader extends AbstractLoader {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} parent Calling QueueItem\n  *  @param {DotObjectArray} options Loader options\n  *  @throw {TypeError} If provided callback is not a Function\n  */\n  constructor(parent, options) {\n    if (!(options.data.loader instanceof Function)) {\n      throw new TypeError('Beloader : Custom loader must be a valid callback');\n    }\n    super(parent, options);\n  }\n\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @type {Promise} Custom callback promise\n  */\n  get promise() {\n    return this.options.data.loader.call(this);\n  }\n}\n\nexport {CustomLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/CustomLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "class",
    "name": "CustomLoader",
    "memberof": "src/loaders/CustomLoader.js",
    "static": true,
    "longname": "src/loaders/CustomLoader.js~CustomLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/CustomLoader.js",
    "importStyle": "CustomLoader",
    "description": " Custom loader let user provide a custom callback\n as a loader instance\n\n The callback must be provided through `options.loader` and\n must return a promise. It can also throw events if needed.\n\n It will always be called whenever `options.async` is set to `true`\n or `false`. Only calling QueueItem will be exposed in the\n latter promise. For bringing back data, you can use event or\n add a custom property to the QueueItem. You can access item via the\n `parent` property of the loader.",
    "examples": [
      " var loader = new Beloader();\n var myLoader = function() {\n  return new Promise(function(resolve, reject) {\n    // Do things\n    this.parent.response = things;\n    if(OK) resolve();\n    else reject('error on things'); // Will be available in item.error\n  }.bind(this));\n }\n\n loader.fetch('custom', {loader: myLoader})\n  .promise\n  .then(\n    function(item) { item.response // yields \"things\" value },\n    function(item) { console.log(item.error) // display \"error on things\" }\n  );"
    ],
    "lineNumber": 45,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractLoader"
    ]
  },
  {
    "__docId__": 130,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/CustomLoader.js~CustomLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/CustomLoader.js~CustomLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@throw",
        "tagValue": "{TypeError} If provided callback is not a Function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Loader options"
      }
    ]
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "promise",
    "memberof": "src/loaders/CustomLoader.js~CustomLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/CustomLoader.js~CustomLoader#promise",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/loaders/FontLoader.js",
    "content": "/**\n*  @file FontLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractLoader from 'core/AbstractLoader';\nimport webfont from 'webfontloader';\n\n/**\n*  FontLoader is solely porting webfontloader as a loader\n*\n*  The main goal of this loader is to trigger a ready state\n*  only when the font(s) are ready to be parsed to avoid\n*  FOUT artifacts\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractLoader}\n*\n*  @see https://github.com/typekit/webfontloader\n*/\nexport default class FontLoader extends AbstractLoader {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} parent Calling QueueItem\n  *  @param {DotObjectArray} options Options for the loader\n  *  @param {Object} options.webfont Options object for webfontloader\n  *  @throws {TypeError}  if `options.webfont` not provided\n  */\n  constructor(parent, options) {\n    if (!options.has('webfont')) throw new TypeError('BeLoader : webfont configuration required for loader');\n    options.push('fallbackSync', false); // No sync fallback allowed\n    super(parent, options);\n  }\n\n  /**\n  *  Always throw an error because method is not allowed\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @throws {TypeError} Always thrown if method requested\n  */\n  sync() {\n    throw new TypeError('BeLoader : webfont only works in async mode');\n  }\n\n  /**\n  *  Load a font using webfontloader\n  *\n  *  This loader expect a webfont configuration object to be provided with the options\n  *  as `options.webfont`. For available webfont options, please check\n  *  webfontloader website.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Promise resolved or rejected at load end\n  *  @emits {loadstart} CSS Font requesting begins\n  *  @emits {loadstarted} CSS Font requesting begins\n  *  @throws {TypeError} If webfont configuration object is not provided in options\n  *  @see https://github.com/typekit/webfontloader\n  */\n  async() {\n    let p, cb1, cb2, _resolve, _reject;\n\n    p = new Promise(function (resolve, reject) {\n      _resolve = resolve;\n      _reject = reject;\n    });\n\n    cb1 = this.options.pull('webfont.active');\n    this.options.push('webfont.active', function () {\n      if (cb1 instanceof Function) cb1();\n      _resolve();\n    });\n\n    cb2 = this.options.pull('webfont.inactive');\n    this.options.push('webfont.inactive', function () {\n      if (cb2 instanceof Function) cb2();\n      _reject();\n    });\n\n    this.fire('loadstart', this);\n    webfont.load(this.options.data.webfont);\n    this.fire('loadstarted', this);\n\n    return p;\n  }\n}\n\nexport {FontLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/FontLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "class",
    "name": "FontLoader",
    "memberof": "src/loaders/FontLoader.js",
    "static": true,
    "longname": "src/loaders/FontLoader.js~FontLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/FontLoader.js",
    "importStyle": "FontLoader",
    "description": " FontLoader is solely porting webfontloader as a loader\n\n The main goal of this loader is to trigger a ready state\n only when the font(s) are ready to be parsed to avoid\n FOUT artifacts",
    "see": [
      "https://github.com/typekit/webfontloader"
    ],
    "lineNumber": 24,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractLoader"
    ]
  },
  {
    "__docId__": 134,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/FontLoader.js~FontLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/FontLoader.js~FontLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the loader"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.webfont",
        "description": "Options object for webfontloader"
      }
    ],
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "if `options.webfont` not provided"
      }
    ]
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "sync",
    "memberof": "src/loaders/FontLoader.js~FontLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/FontLoader.js~FontLoader#sync",
    "access": "public",
    "description": " Always throw an error because method is not allowed",
    "lineNumber": 50,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "Always thrown if method requested"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "async",
    "memberof": "src/loaders/FontLoader.js~FontLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/FontLoader.js~FontLoader#async",
    "access": "public",
    "description": " Load a font using webfontloader\n\n This loader expect a webfont configuration object to be provided with the options\n as `options.webfont`. For available webfont options, please check\n webfontloader website.",
    "see": [
      "https://github.com/typekit/webfontloader"
    ],
    "lineNumber": 71,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Promise resolved or rejected at load end"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolved or rejected at load end"
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "If webfont configuration object is not provided in options"
      }
    ],
    "emits": [
      {
        "types": [
          "loadstart"
        ],
        "description": "CSS Font requesting begins"
      },
      {
        "types": [
          "loadstarted"
        ],
        "description": "CSS Font requesting begins"
      }
    ],
    "params": []
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/loaders/ImageLoader.js",
    "content": "/**\n*  @file ImageLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractLoader from 'core/AbstractLoader';\n\n/**\n*  If loaded async, the response will be added as a blob reference in src unless\n*  an option `base64` set to `true` is provided. In that case, the image will\n*  be parsed as a DataURI.\n*\n*  Image loader also accepts a `attributes` option to customize\n*  resulting HtmlElement.\n*\n*  The resulting HtmlElement will not be inserted in DOM but provided\n*  as a `image` property of the parent QueueItem. The property will be available\n*  as soon as loader will be available to permit DOM insertion at\n*  creation. It can be retrieved with the `loaderReady` promise exposed\n*  by QueueItem.\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractLoader}\n*\n*  @example\n*  var loader = new Beloader();\n*\n*  // Sync mode with display only when loaded\n*  var img = loader.fetch('img', {\n*    url: 'http://myserver.com/image.jpg',\n*    async: false,\n*    attributes : {\n*      alt: 'My image',\n*      width: '100px',\n*      height: '100px'\n*    }\n*  }).then(item => {\n*    document.body.appendChild(item.image);\n*  });\n*\n*  // Async mode with display only when loaded (as a blob object)\n*  var img = loader.fetch('img', {\n*    url: 'http://myserver.com/image.jpg',\n*    attributes : {\n*      alt: 'My image',\n*      width: '100px',\n*      height: '100px'\n*    }\n*  }).then(item => {\n*    document.body.appendChild(item.image);\n*  });\n*\n*  // Async mode with display only when loaded (as a DataURI string)\n*  var img = loader.fetch('img', {\n*    url: 'http://myserver.com/image.jpg',\n*    base64: true,\n*    attributes : {\n*      alt: 'My image',\n*      width: '100px',\n*      height: '100px'\n*    }\n*  }).then(item => {\n*    document.body.appendChild(item.image);\n*  });\n*/\n\nexport default class ImageLoader extends AbstractLoader {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} parent Calling QueueItem\n  *  @param {DotObjectArray} options Options for the loader\n  *  @param {string} options.url  URL of the asset\n  *  @param {boolean} [options.base64=false]  If set to `true` and loaded async, the asset\n  *  will be parsed as a base64 data string. Otherwise, it will be parsed as binary blob\n  *  @param {Object} [options.attributes] Attributes for the resulting HTML node\n  *  @throws {TypeError}  if `options.url` is not defined\n  */\n  constructor(parent, options) {\n    super(parent, options);\n    if (!options.has('url')) throw new TypeError('Beloader : image url must be defined');\n    options.define('base64', false);\n    /**\n    *  Underlying node for insertion\n    *  @type {HTMLElement}\n    */\n    this._node = this.node;\n    this.parent.image = this.node;\n  }\n\n  /**\n  *  Getter that generates HTMLElement to contain image (sync or async)\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @type {HTMLElement} HTMLElement\n  */\n  get node() {\n    if (typeof this._node === 'undefined') {\n      this._node = document.createElement('img');\n      this.options.forEach(function (val, attr) {\n        this._node.setAttribute(attr, val);\n      }.bind(this), 'attributes', null, false);\n    }\n\n    return this._node;\n  }\n\n  /**\n  *  Load image\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  sync() {\n    this.node.src = this.options.data.url;\n    return super.sync();\n  }\n\n  /**\n  *  Event hook to add specific Blob request headers to\n  *  XMLHttpRequest instance\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _loadstart() {\n    if (this.xhr) this.xhr.responseType = 'blob';\n  }\n\n  /**\n  *  Load image binary (blob) or dataUri (base64) and update src attribute\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  async() {\n    const _this = this;\n\n    return new Promise((resolve, reject) => {\n      super.async().then(response => {\n        if (_this.options.data.base64) {\n          // Decode binary as base64\n          let reader = new window.FileReader();\n\n          reader.readAsDataURL(response);\n          reader.onload = () => {\n            _this.node.src = reader.result;\n            resolve();\n          };\n          reader.onerror = () => {\n            reject(reader.error);\n          };\n        } else { // Decode as binary blob\n          let url = window.URL || window.webkitURL;\n\n          try {\n            _this.node.src = url.createObjectURL(response);\n            resolve();\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n    });\n  }\n}\n\nexport {ImageLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/ImageLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "class",
    "name": "ImageLoader",
    "memberof": "src/loaders/ImageLoader.js",
    "static": true,
    "longname": "src/loaders/ImageLoader.js~ImageLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/ImageLoader.js",
    "importStyle": "ImageLoader",
    "description": " If loaded async, the response will be added as a blob reference in src unless\n an option `base64` set to `true` is provided. In that case, the image will\n be parsed as a DataURI.\n\n Image loader also accepts a `attributes` option to customize\n resulting HtmlElement.\n\n The resulting HtmlElement will not be inserted in DOM but provided\n as a `image` property of the parent QueueItem. The property will be available\n as soon as loader will be available to permit DOM insertion at\n creation. It can be retrieved with the `loaderReady` promise exposed\n by QueueItem.",
    "examples": [
      " var loader = new Beloader();\n\n // Sync mode with display only when loaded\n var img = loader.fetch('img', {\n   url: 'http://myserver.com/image.jpg',\n   async: false,\n   attributes : {\n     alt: 'My image',\n     width: '100px',\n     height: '100px'\n   }\n }).then(item => {\n   document.body.appendChild(item.image);\n });\n\n // Async mode with display only when loaded (as a blob object)\n var img = loader.fetch('img', {\n   url: 'http://myserver.com/image.jpg',\n   attributes : {\n     alt: 'My image',\n     width: '100px',\n     height: '100px'\n   }\n }).then(item => {\n   document.body.appendChild(item.image);\n });\n\n // Async mode with display only when loaded (as a DataURI string)\n var img = loader.fetch('img', {\n   url: 'http://myserver.com/image.jpg',\n   base64: true,\n   attributes : {\n     alt: 'My image',\n     width: '100px',\n     height: '100px'\n   }\n }).then(item => {\n   document.body.appendChild(item.image);\n });"
    ],
    "lineNumber": 70,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractLoader"
    ]
  },
  {
    "__docId__": 139,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/ImageLoader.js~ImageLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ImageLoader.js~ImageLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 84,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the loader"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.url",
        "description": "URL of the asset"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.base64",
        "description": "If set to `true` and loaded async, the asset\n will be parsed as a base64 data string. Otherwise, it will be parsed as binary blob"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.attributes",
        "description": "Attributes for the resulting HTML node"
      }
    ],
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "if `options.url` is not defined"
      }
    ]
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "_node",
    "memberof": "src/loaders/ImageLoader.js~ImageLoader",
    "static": false,
    "longname": "src/loaders/ImageLoader.js~ImageLoader#_node",
    "access": "private",
    "description": " Underlying node for insertion",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "get",
    "name": "node",
    "memberof": "src/loaders/ImageLoader.js~ImageLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ImageLoader.js~ImageLoader#node",
    "access": "public",
    "description": " Getter that generates HTMLElement to contain image (sync or async)",
    "lineNumber": 104,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "sync",
    "memberof": "src/loaders/ImageLoader.js~ImageLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ImageLoader.js~ImageLoader#sync",
    "access": "public",
    "description": " Load image",
    "lineNumber": 124,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "_loadstart",
    "memberof": "src/loaders/ImageLoader.js~ImageLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ImageLoader.js~ImageLoader#_loadstart",
    "access": "private",
    "description": " Event hook to add specific Blob request headers to\n XMLHttpRequest instance",
    "lineNumber": 137,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "async",
    "memberof": "src/loaders/ImageLoader.js~ImageLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ImageLoader.js~ImageLoader#async",
    "access": "public",
    "description": " Load image binary (blob) or dataUri (base64) and update src attribute",
    "lineNumber": 150,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/loaders/JsonLoader.js",
    "content": "/**\n*  @file JsonLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractLoader from 'core/AbstractLoader';\n\n/**\n*  Load and parse JSON data\n*\n*  JsonLoader only performs asynchronously. If succeeded, returned data\n*  will be available in QueueItem#response property.\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*\n*  @example\n*  var loader = new Beloader();\n*\n*  loader\n*   .fetch('json', 'https://reqres.in/api/users')\n*   .then(function(item) {\n*     var data = item.response; // JSON data\n*   });\n*\n*/\nexport default class JsonLoader extends AbstractLoader {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} parent QueueItem calling parent\n  *  @param {DotObjectArray} options Options for loader\n  */\n  constructor(parent, options) {\n    if (!options.has('url')) throw new TypeError('Beloader : Asset JSON url must be defined');\n    super(parent, options);\n    this.options.push('fallbackSync', false); // No sync fallback allowed\n  }\n\n  /**\n  *  Always throw an error because method is not allowed\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @override\n  *  @throws {TypeError} Always thrown if method requested\n  */\n  sync() {\n    throw new TypeError('BeLoader : JsonLoader only works in async mode');\n  }\n\n  /**\n  *  Event hook to add specific JSON request headers to\n  *  XMLHttpRequest instance\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _loadstart() {\n    this.xhr.setRequestHeader('Accept', 'application/json');\n    this.xhr.responseType = 'json';\n  }\n\n  /**\n  *  Async loader for JSON data\n  *\n  *  The loader will first try to fetch parsed JSON, then try to parse\n  *  response itself and finally try to parse responseText for IE.\n  *\n  *  If none of parsing succeeds, promise is rejected.\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise}\n  */\n  async() {\n    const _this = this;\n\n    return new Promise((resolve, reject) => {\n      super.async().then(\n        response => {\n          let rejected = false;\n          let err = 'Beloader : Malformed JSON or non-JSON';\n\n          // IE Hack or null response\n          if (typeof response === 'undefined' || response === null) {\n            try {\n              response = this.xhr.responseText;\n            } catch (e) {\n              rejected = true;\n            }\n          }\n\n          //\n          /* istanbul ignore next */\n          if (typeof response === 'string') {\n            try {\n              response = JSON.parse(response);\n            } catch (error) {\n              rejected = true;\n              err = error;\n            }\n          }\n\n          if (rejected) {\n            reject(err);\n          } else {\n            _this.parent.response = response;\n            resolve();\n          }\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n  }\n}\n\nexport {JsonLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/JsonLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "class",
    "name": "JsonLoader",
    "memberof": "src/loaders/JsonLoader.js",
    "static": true,
    "longname": "src/loaders/JsonLoader.js~JsonLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/JsonLoader.js",
    "importStyle": "JsonLoader",
    "description": " Load and parse JSON data\n\n JsonLoader only performs asynchronously. If succeeded, returned data\n will be available in QueueItem#response property.",
    "examples": [
      " var loader = new Beloader();\n\n loader\n  .fetch('json', 'https://reqres.in/api/users')\n  .then(function(item) {\n    var data = item.response; // JSON data\n  });"
    ],
    "lineNumber": 29,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "core/AbstractLoader~AbstractLoader"
    ]
  },
  {
    "__docId__": 148,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/JsonLoader.js~JsonLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/JsonLoader.js~JsonLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "QueueItem calling parent"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for loader"
      }
    ]
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "sync",
    "memberof": "src/loaders/JsonLoader.js~JsonLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/JsonLoader.js~JsonLoader#sync",
    "access": "public",
    "description": " Always throw an error because method is not allowed",
    "lineNumber": 54,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "override": true,
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "Always thrown if method requested"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "_loadstart",
    "memberof": "src/loaders/JsonLoader.js~JsonLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/JsonLoader.js~JsonLoader#_loadstart",
    "access": "private",
    "description": " Event hook to add specific JSON request headers to\n XMLHttpRequest instance",
    "lineNumber": 66,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "async",
    "memberof": "src/loaders/JsonLoader.js~JsonLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/JsonLoader.js~JsonLoader#async",
    "access": "public",
    "description": " Async loader for JSON data\n\n The loader will first try to fetch parsed JSON, then try to parse\n response itself and finally try to parse responseText for IE.\n\n If none of parsing succeeds, promise is rejected.",
    "lineNumber": 85,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/loaders/NoneLoader.js",
    "content": "/**\n*  @file NoneLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractEventManager from 'core/AbstractEventManager';\n\n/**\n*  NoneLoader is a special loader that loads nothing.\n*\n*  Its prupose is to produce side-effect with\n*  an ever resolved and loaded item.\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractEventManager}\n*/\nexport default class NoneLoader extends AbstractEventManager {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} item Requesting item\n  *  @param {DotObjectArray} options Options for the loader\n  */\n  constructor(parent, options) {\n    super();\n\n    /**\n    *  Requesting parent item\n    *  @since 1.0.0\n    *  @type {QueueItem}\n    */\n    this.parent = parent;\n\n    /**\n    *  Map plugins\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this._plugins = parent._plugins;\n    this._plugins.forEach(function (plugin, name) {\n      /** @ignore */\n      this[name] = plugin;\n    }.bind(this));\n\n    /**\n    *  Loader options\n    *\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this.options = options;\n  }\n\n  /**\n  *  Loader promise\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @type {Promise}\n  */\n  get promise() {\n    return this.parent.loaderReady;\n  }\n}\n\nexport {NoneLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/NoneLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "class",
    "name": "NoneLoader",
    "memberof": "src/loaders/NoneLoader.js",
    "static": true,
    "longname": "src/loaders/NoneLoader.js~NoneLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/NoneLoader.js",
    "importStyle": "NoneLoader",
    "description": " NoneLoader is a special loader that loads nothing.\n\n Its prupose is to produce side-effect with\n an ever resolved and loaded item.",
    "lineNumber": 20,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractEventManager"
    ]
  },
  {
    "__docId__": 154,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/NoneLoader.js~NoneLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/NoneLoader.js~NoneLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "Requesting item"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the loader"
      }
    ]
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "parent",
    "memberof": "src/loaders/NoneLoader.js~NoneLoader",
    "static": false,
    "longname": "src/loaders/NoneLoader.js~NoneLoader#parent",
    "access": "public",
    "description": " Requesting parent item",
    "lineNumber": 37,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "QueueItem"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "_plugins",
    "memberof": "src/loaders/NoneLoader.js~NoneLoader",
    "static": false,
    "longname": "src/loaders/NoneLoader.js~NoneLoader#_plugins",
    "access": "private",
    "description": " Map plugins",
    "lineNumber": 44,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/loaders/NoneLoader.js~NoneLoader",
    "static": false,
    "longname": "src/loaders/NoneLoader.js~NoneLoader#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "options",
    "memberof": "src/loaders/NoneLoader.js~NoneLoader",
    "static": false,
    "longname": "src/loaders/NoneLoader.js~NoneLoader#options",
    "access": "public",
    "description": " Loader options",
    "lineNumber": 56,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "get",
    "name": "promise",
    "memberof": "src/loaders/NoneLoader.js~NoneLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/NoneLoader.js~NoneLoader#promise",
    "access": "public",
    "description": " Loader promise",
    "lineNumber": 66,
    "since": "1.0.0",
    "version": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/loaders/PluginLoader.js",
    "content": "/**\n*  @file ScriptLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractLoader from 'core/AbstractLoader';\n\n/**\n*  Loads a beloader plugin\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractLoader}\n*/\nexport default class PluginLoader extends AbstractLoader {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} parent Calling QueueItem\n  *  @param {DotObjectArray} options Options for the loader\n  *  @param {string} options.name Plugin var name\n  *  @param {string} [options.url] Plugin script url\n  *  @param {boolean} [options.inline=false]  If `true`,\n  *  the plugin script will be evaluated inline\n  *  @throw {TypeError} If plugin name is missing\n  */\n  constructor(parent, options) {\n    if (!options.has('name')) throw new TypeError('Beloader : Plugin must have a name');\n    if (!options.has('url')) {\n      options.data.url = 'https://cdn.jsdelivr.net/gh/beloader/beloader-' + options.data.name + '@latest';\n    }\n    options.define('inline', false);\n    super(parent, options);\n\n    /**\n    *  Underlying node for insertion\n    *  @type {HTMLElement}\n    */\n    this._node = undefined;\n  }\n\n  /**\n  *  Getter that generates HTMLElement to contain script (sync or async)\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @type {HTMLElement} HTMLElement <script></script>\n  */\n  get node() {\n    if (typeof this._node === 'undefined') {\n      this._node = document.createElement('script');\n      this._node.setAttribute('type', 'text/javascript');\n      if (!this.options.data.async) {\n        this._node.setAttribute('src', this.options.data.url);\n      }\n    }\n    return this._node;\n  }\n\n  /**\n  *  Insert plugin code in <script> tag with src for sync loading\n  *  and import in plugins when finished\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  sync() {\n    document.querySelector('head').appendChild(this.node);\n    return this._loadPlugin(super.sync());\n\n  }\n\n  /**\n  *  Load plugin script, insert response in a <script> tag\n  *  and import in plugins when finished\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  async() {\n    if (this.options.data.inline) return this._loadPlugin(super.async());\n    this.options.data.async = false;\n    this.node.setAttribute('async', '');\n    document.querySelector('head').appendChild(this.node);\n    return this._loadPlugin(super.sync());\n  }\n\n  /**\n  *  Description for _load\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {$type} p Description for p\n  *  @returns {type} Return description\n  */\n  _loadPlugin(p) {\n    const _this = this;\n\n    return new Promise((resolve, reject) => {\n      p.then((response) => {\n        let beloader = _this.parent.parent;\n\n        if (response && _this.options.data.inline) {\n          _this.node.innerHTML = response;\n          document.querySelector('head').appendChild(_this.node);\n        }\n\n        try {\n          let plugin = beloader.pluginize(_this.options.data.name, window[_this.options.data.name], _this.options);\n\n          if (plugin.promise) {\n            plugin.promise.then(\n              () => resolve(),\n              (e) => reject('Unable to load plugin : ' + _this.options.name + ' [' + e + ']')\n            );\n          } else resolve();\n        } catch (e) {\n          reject('Unable to load plugin : ' + _this.options.name + ' [' + e + ']');\n        }\n      });\n    });\n  }\n}\n\nexport {PluginLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/PluginLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "class",
    "name": "PluginLoader",
    "memberof": "src/loaders/PluginLoader.js",
    "static": true,
    "longname": "src/loaders/PluginLoader.js~PluginLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/PluginLoader.js",
    "importStyle": "PluginLoader",
    "description": " Loads a beloader plugin",
    "lineNumber": 17,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractLoader"
    ]
  },
  {
    "__docId__": 162,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/PluginLoader.js~PluginLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/PluginLoader.js~PluginLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@throw",
        "tagValue": "{TypeError} If plugin name is missing"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the loader"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.name",
        "description": "Plugin var name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.url",
        "description": "Plugin script url"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.inline",
        "description": "If `true`,\n the plugin script will be evaluated inline"
      }
    ]
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "_node",
    "memberof": "src/loaders/PluginLoader.js~PluginLoader",
    "static": false,
    "longname": "src/loaders/PluginLoader.js~PluginLoader#_node",
    "access": "private",
    "description": " Underlying node for insertion",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "get",
    "name": "node",
    "memberof": "src/loaders/PluginLoader.js~PluginLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/PluginLoader.js~PluginLoader#node",
    "access": "public",
    "description": " Getter that generates HTMLElement to contain script (sync or async)",
    "lineNumber": 54,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "sync",
    "memberof": "src/loaders/PluginLoader.js~PluginLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/PluginLoader.js~PluginLoader#sync",
    "access": "public",
    "description": " Insert plugin code in <script> tag with src for sync loading\n and import in plugins when finished",
    "lineNumber": 75,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "async",
    "memberof": "src/loaders/PluginLoader.js~PluginLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/PluginLoader.js~PluginLoader#async",
    "access": "public",
    "description": " Load plugin script, insert response in a <script> tag\n and import in plugins when finished",
    "lineNumber": 91,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "_loadPlugin",
    "memberof": "src/loaders/PluginLoader.js~PluginLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/PluginLoader.js~PluginLoader#_loadPlugin",
    "access": "private",
    "description": " Description for _load",
    "lineNumber": 109,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{type} Return description"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "$type"
        ],
        "spread": false,
        "optional": false,
        "name": "p",
        "description": "Description for p"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "type"
      ],
      "spread": false,
      "description": "Return description"
    }
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "src/loaders/ScriptLoader.js",
    "content": "/**\n*  @file ScriptLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractLoader from 'core/AbstractLoader';\n\n/**\n*  Loads external javascript\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractLoader}\n*/\nexport default class ScriptLoader extends AbstractLoader {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} parent Calling QueueItem\n  *  @param {DotObjectArray} options Options for the loader\n  *  @param {string} options.url  URL of the script\n  *  @param {boolean} [options.inline=false]  If loaded async,\n  *  the script will be parsed inline. Otherwise, it will\n  *  be loaded through a <script async> tag\n  *  @param {Object} [options.attributes] Attributes for the resulting HTML node\n  *  @throw {TypeError} If script url is missing\n  */\n  constructor(parent, options) {\n    super(parent, options);\n    if (!options.has('url')) throw new TypeError('Beloader : Script url must be defined');\n    this.options.define('inline', false);\n    /**\n    *  Underlying node for insertion\n    *  @type {HTMLElement}\n    */\n    this._node = undefined;\n  }\n\n  /**\n  *  Getter that generates HTMLElement to contain script (sync or async)\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @type {HTMLElement} HTMLElement <script></script>\n  */\n  get node() {\n    if (typeof this._node === 'undefined') {\n      this._node = document.createElement('script');\n      this._node.setAttribute('type', 'text/javascript');\n      if (!this.options.data.async) {\n        this._node.setAttribute('src', this.options.data.url);\n      }\n      this.options.forEach(function (val, attr) {\n        this._node.setAttribute(attr, val);\n      }.bind(this), 'attributes', null, false);\n    }\n    return this._node;\n  }\n\n  /**\n  *  Insert <script> tag with src for sync loading\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  sync() {\n    document.querySelector('head').appendChild(this.node);\n    return super.sync();\n  }\n\n  /**\n  *  Load script and insert response in a <script> tag if\n  *  options.inline set to `true` or load the script\n  *  with async attribute\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  async() {\n    const _this = this;\n\n    if (this.options.data.inline) {\n      let p = super.async();\n\n      p.then(response => {\n        if (response) {\n          _this.node.innerHTML = response;\n          document.querySelector('head').appendChild(_this.node);\n        }\n      });\n\n      return p;\n    }\n\n    this.options.data.async = false;\n    if (this.options.has('loader.async')) this.options.push('loader.sync', this.options.pull('loader.async'));\n    this.node.setAttribute('async', '');\n    return this.sync();\n  }\n}\n\nexport {ScriptLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/ScriptLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "ScriptLoader",
    "memberof": "src/loaders/ScriptLoader.js",
    "static": true,
    "longname": "src/loaders/ScriptLoader.js~ScriptLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/ScriptLoader.js",
    "importStyle": "ScriptLoader",
    "description": " Loads external javascript",
    "lineNumber": 17,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractLoader"
    ]
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/ScriptLoader.js~ScriptLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ScriptLoader.js~ScriptLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@throw",
        "tagValue": "{TypeError} If script url is missing"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the loader"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.url",
        "description": "URL of the script"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.inline",
        "description": "If loaded async,\n the script will be parsed inline. Otherwise, it will\n be loaded through a <script async> tag"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.attributes",
        "description": "Attributes for the resulting HTML node"
      }
    ]
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "_node",
    "memberof": "src/loaders/ScriptLoader.js~ScriptLoader",
    "static": false,
    "longname": "src/loaders/ScriptLoader.js~ScriptLoader#_node",
    "access": "private",
    "description": " Underlying node for insertion",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "get",
    "name": "node",
    "memberof": "src/loaders/ScriptLoader.js~ScriptLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ScriptLoader.js~ScriptLoader#node",
    "access": "public",
    "description": " Getter that generates HTMLElement to contain script (sync or async)",
    "lineNumber": 51,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "sync",
    "memberof": "src/loaders/ScriptLoader.js~ScriptLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ScriptLoader.js~ScriptLoader#sync",
    "access": "public",
    "description": " Insert <script> tag with src for sync loading",
    "lineNumber": 74,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "async",
    "memberof": "src/loaders/ScriptLoader.js~ScriptLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/ScriptLoader.js~ScriptLoader#async",
    "access": "public",
    "description": " Load script and insert response in a <script> tag if\n options.inline set to `true` or load the script\n with async attribute",
    "lineNumber": 90,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "src/loaders/StylesheetLoader.js",
    "content": "/**\n*  @file StylesheetLoader.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport AbstractLoader from 'core/AbstractLoader';\n\n/**\n*  External stylesheet loader\n*\n*  If loaded sync, the stylesheet is embedded as a <link> tag. If\n*  loaded async, the response will be embedded in an inline <style>\n*  tag.\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractLoader}\n*/\n\nexport default class StylesheetLoader extends AbstractLoader {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {QueueItem} parent Calling QueueItem\n  *  @param {DotObjectArray} options Options for the loader\n  *  @param {string} options.url  URL of the script\n  *  @param {Object} [options.attributes] Attributes for the resulting HTML node\n  *  @throw {TypeError} If script url is missing\n  *  @throws {TypeError}  if `options.url` is not defined\n  */\n  constructor(parent, options) {\n    super(parent, options);\n    if (!options.has('url')) throw new TypeError('Beloader : stylesheet url must be defined');\n    /**\n    *  Underlying node for insertion\n    *  @type {HTMLElement}\n    */\n    this._node = undefined;\n  }\n\n  /**\n  *  Getter that generates HTMLElement to contain css (sync or async)\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *  @type {HTMLElement} HTMLElement\n  */\n  get node() {\n    if (typeof this._node === 'undefined') {\n      if (this.options.data.async) {\n        this._node = document.createElement('style');\n        this._node.setAttribute('type', 'text/css');\n      } else {\n        this._node = document.createElement('link');\n        this._node.setAttribute('rel', 'stylesheet');\n        this._node.setAttribute('type', 'text/css');\n        this._node.setAttribute('href', this.options.data.url);\n      }\n      this.options.forEach(function (val, attr) {\n        this._node.setAttribute(attr, val);\n      }.bind(this), 'attributes', null, false);\n    }\n    return this._node;\n  }\n\n  /**\n  *  Insert <link> tag with href for sync loading\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  sync() {\n    document.querySelector('head').appendChild(this.node);\n    return super.sync();\n  }\n\n  /**\n  *  Load script and insert response in a <style> tag\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @returns {Promise} Loading promise\n  */\n  async() {\n    const _this = this;\n    let p = super.async();\n\n    p.then(response => {\n      if (response) {\n        _this.node.innerHTML = response;\n        document.querySelector('head').appendChild(_this.node);\n      }\n    });\n\n    return p;\n  }\n}\n\nexport {StylesheetLoader};\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/loaders/StylesheetLoader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "class",
    "name": "StylesheetLoader",
    "memberof": "src/loaders/StylesheetLoader.js",
    "static": true,
    "longname": "src/loaders/StylesheetLoader.js~StylesheetLoader",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/loaders/StylesheetLoader.js",
    "importStyle": "StylesheetLoader",
    "description": " External stylesheet loader\n\n If loaded sync, the stylesheet is embedded as a <link> tag. If\n loaded async, the response will be embedded in an inline <style>\n tag.",
    "lineNumber": 22,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractLoader"
    ]
  },
  {
    "__docId__": 179,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loaders/StylesheetLoader.js~StylesheetLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/StylesheetLoader.js~StylesheetLoader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@throw",
        "tagValue": "{TypeError} If script url is missing"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the loader"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.url",
        "description": "URL of the script"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.attributes",
        "description": "Attributes for the resulting HTML node"
      }
    ],
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "if `options.url` is not defined"
      }
    ]
  },
  {
    "__docId__": 180,
    "kind": "member",
    "name": "_node",
    "memberof": "src/loaders/StylesheetLoader.js~StylesheetLoader",
    "static": false,
    "longname": "src/loaders/StylesheetLoader.js~StylesheetLoader#_node",
    "access": "private",
    "description": " Underlying node for insertion",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "get",
    "name": "node",
    "memberof": "src/loaders/StylesheetLoader.js~StylesheetLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/StylesheetLoader.js~StylesheetLoader#node",
    "access": "public",
    "description": " Getter that generates HTMLElement to contain css (sync or async)",
    "lineNumber": 53,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "sync",
    "memberof": "src/loaders/StylesheetLoader.js~StylesheetLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/StylesheetLoader.js~StylesheetLoader#sync",
    "access": "public",
    "description": " Insert <link> tag with href for sync loading",
    "lineNumber": 80,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "async",
    "memberof": "src/loaders/StylesheetLoader.js~StylesheetLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loaders/StylesheetLoader.js~StylesheetLoader#async",
    "access": "public",
    "description": " Load script and insert response in a <style> tag",
    "lineNumber": 94,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Loading promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Loading promise"
    },
    "params": []
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "src/queueitem.js",
    "content": "/**\n*  @file queueitem.js\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @licence AGPL-3.0 {@link https://github.com/liqueurdetoile/beloader/blob/master/LICENSE}\n*/\n\nimport ObjectArray from 'dot-object-array';\nimport AbstractEventManager from 'core/AbstractEventManager';\nimport NoneLoader from 'loaders/NoneLoader';\n\n/**\n*  QueueItem handles all item behaviours in the loading queue.\n*  Given its type and options, it will load the appropriate loader\n*  and process request.\n*\n*  @version 1.0.0\n*  @since 1.0.0\n*  @author Liqueur de Toile <contact@liqueurdetoile.com>\n*  @extends {AbstractEventManager}\n*/\nexport default class QueueItem extends AbstractEventManager {\n  /**\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @param {string} type Type of item. See {@link Beloader#fetch}\n  *  @param {Beloader} parent Beloader calling instance\n  *  @param {DotObjectArray} options Options for QueueItem and underlying loader\n  */\n  constructor(type, parent, options) {\n    super(options.data.on);\n\n    const _this = this;\n    let loader;\n\n    /**\n    *  Requesting parent item\n    *  @since 1.0.0\n    *  @type {Beloader}\n    */\n    this.parent = parent;\n\n    /**\n    *  Map plugins\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this._plugins = parent._plugins;\n    this._plugins.forEach((plugin, name) => {\n      /** @ignore */\n      _this[name] = plugin;\n    });\n\n    /**\n    *  Stores item progress\n    *  @since 1.0.0\n    *  @type {DotObjectArray}\n    */\n    this.progress = new ObjectArray();\n\n    /**\n    *  Stores the state of the item\n    *  @since 1.0.0\n    *  @type {Object} state\n    *  @property {boolean}  state.waiting `true` if item is waiting to be processed\n    *  @property {boolean}  state.pending `true` if item's loading is in progress\n    *  @property {boolean}  state.loaded `true` if item's loading is completed and successfull\n    *  @property {boolean}  state.error `true` if item's loading is in error, aborted or timed out\n    *  @property {boolean}  state.abort `true` if item's loading is aborted\n    *  @property {boolean}  state.timeout `true` if item's loading is in timeout\n    *  @property {boolean}  state.processed `true` if item's process is over (loading + initialization)\n    *  @property {boolean}  state.resolved `true` if item's promise have been resolved\n    *  @property {boolean}  state.ready `true` if item is ready to be used\n    */\n    this.state = {\n      waiting: true,\n      pending: false,\n      loaded: false,\n      error: false,\n      abort: false,\n      timeout: false,\n      processed: false,\n      resolved: false,\n      ready: false\n    };\n\n    /**\n    *  Id of the item\n    *  @type {string}\n    *  @see {Beloader#fetch}\n    */\n    this.id = options.data.id;\n\n    /**\n    *  Autoprocess trigger\n    *  @type {boolean}\n    *  @see {Beloader#fetch}\n    */\n    this.autoprocess = options.data.autoprocess;\n\n    /**\n    *  Async mode trigger\n    *  @type {boolean}\n    *  @see {Beloader#fetch}\n    */\n    this.async = options.data.async;\n\n    /**\n    *  Defer mode trigger\n    *  @type {boolean}\n    *  @see {Beloader#fetch}\n    */\n    this.defer = options.data.defer;\n\n    /**\n    *  Awaiting mode, dependencies listing\n    *  @type {Array} awaiting\n    *  @see {Beloader#fetch}\n    */\n    this.awaiting = [];\n    if (typeof options.data.awaiting !== 'undefined') {\n      if (options.data.awaiting instanceof Array) this.awaiting = options.data.awaiting;\n      else this.awaiting = [options.data.awaiting];\n    }\n\n    /**\n    *  Loader ready promise\n    *  @since 1.0.0\n    *  @type {Promise}\n    */\n    this.loaderReady = new Promise((resolve, reject) => {\n      _this._loaderOK = resolve;\n      _this._loaderKO = reject;\n    });\n\n    /**\n    *  Item process promise\n    *  @since 1.0.0\n    *  @type {Promise}\n    */\n    this.promise = new Promise((resolve, reject) => {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n\n    // Import loader\n    switch (type) {\n      case 'webfont':\n      case 'font':\n        loader = 'FontLoader';\n        break;\n      case 'js':\n      case 'script':\n      case 'javascript':\n      case 'ecmascript':\n        loader = 'ScriptLoader';\n        break;\n      case 'style':\n      case 'styles':\n      case 'stylesheet':\n      case 'css':\n        loader = 'StylesheetLoader';\n        break;\n      case 'json':\n        loader = 'JsonLoader';\n        break;\n      case 'image':\n      case 'img':\n        loader = 'ImageLoader';\n        break;\n      case 'plugin':\n        loader = 'PluginLoader';\n        break;\n      case 'none':\n        /**\n        *  Loader instance\n        *  @since 1.0.0\n        *  @type {Loader}\n        */\n        this.loader = new NoneLoader(this, options);\n        if (this.autoprocess) this.process();\n        this._loaderOK(this);\n        break;\n      default:\n        // Custom type loader\n        if (options.data.loader) loader = 'CustomLoader';\n        else throw new TypeError('BeLoader : No loader for assets with type ' + type);\n    }\n\n    /* istanbul ignore else */\n    if (loader) {\n      import(\n        /* webpackChunkName: \"[request]\" */\n        'loaders/' + loader\n      ).then(function (Loader) {\n        try {\n          _this.loader = new Loader.default(_this, options); // eslint-disable-line\n          if (_this.autoprocess) _this.process.call(_this);\n          _this._loaderOK(_this);\n        } catch (e) {\n          _this._loaderKO(_this);\n          _this._reject(e);\n        }\n      });\n    }\n  }\n\n  /**\n  *  Process the request for the QueueItem\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  *\n  *  @emits {load}\n  *  @emits {error}\n  *  @emits {loadend}\n  */\n  process() {\n    const _this = this;\n\n    this.loaderReady.then(function () {\n      try {\n        _this.loader.promise.then(\n          () => {\n            _this.loader.fire('load', _this.loader);\n          },\n          (e) => {\n            _this.loader.fire('error', _this.loader, e);\n          }\n        ).then(() => _this.fire('loadend', _this));\n      } catch (e) {\n        _this.loader.fire('error', _this.loader, e);\n        _this.fire('loadend', _this);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n  *  loadstart built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _loadstart() {\n    let start = +new Date();\n\n    // Update state\n    this.state.waiting = false;\n    this.state.pending = true;\n\n    // Initialize loading statistics\n    this.progress.push('start', start);\n    this.progress.push('details', [{\n      timestamp: start,\n      duration: 0,\n      chunked: 0,\n      chunkrate: 0,\n      elapsed: 0,\n      loaded: 0,\n      rate: 0,\n      complete: 0\n    }]);\n    this.progress.push('loaded', 0);\n  }\n\n  /**\n  *  load built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _load() {\n    // Update state\n    this.state.loaded = true;\n    // Update data loading progress\n    this.progress.data.complete = 100;\n  }\n\n  /**\n  *  error built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _error(ev) {\n    this.state.error = true;\n    this.error = ev.data; // Store error string/object\n  }\n\n  /**\n  *  abort built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _abort() {\n    this.state.abort = true;\n  }\n\n  /**\n  *  timeout built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _timeout() {\n    this.state.timeout = true;\n  }\n\n  /**\n  *  loadend built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _loadend() {\n    // Update state\n    this.state.pending = false;\n    this.state.processed = true;\n\n    this.progress.push('end', +new Date());\n    this.progress.push('elapsed', this.progress.data.end - this.progress.data.start);\n  }\n\n  /**\n  *  ready built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _ready() {\n    if (this.id) {\n      // Update awaitables\n      this.parent._awaitables[this.id] = true;\n      // Relaunch onloadend on beloader instance to trigger awaiting dependents\n      this.parent._loadend();\n    }\n  }\n\n  /**\n  *  progress built-in callback\n  *\n  *  @version 1.0.0\n  *  @since 1.0.0\n  *  @author Liqueur de Toile <contact@liqueurdetoile.com>\n  */\n  _progress(event) {\n    const ev = event.data;\n    let t = +new Date();\n    let pt = this.progress.data.details[this.progress.data.details.length - 1];\n    let details;\n\n    // Update total\n    if (ev.lengthComputable) this.progress.push('total', ev.total);\n\n    // Store step detail\n    details = {\n      timestamp: t,\n      duration: t - pt.timestamp, // milliseconds\n      chunked: ev.loaded - pt.loaded, // Bytes\n      chunkrate: (ev.loaded - pt.loaded) / ((t - pt.timestamp) / 1000), // Bytes/s\n      elapsed: t - this.progress.data.start, // milliseconds\n      loaded: ev.loaded, // Bytes\n      rate: ev.loaded / ((t - this.progress.data.start) / 1000), // Bytes/s\n      complete: (this.progress.data.total ? (ev.loaded / this.progress.data.total) * 100 : 0) // Percent\n    };\n\n    this.progress.data.details.push(details);\n\n    // Update globals instant state\n    this.progress.push('elapsed', details.elapsed);\n    this.progress.push('loaded', details.loaded);\n    this.progress.push('rate', details.rate);\n    this.progress.push('complete', details.complete);\n  }\n}\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/queueitem.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "QueueItem",
    "memberof": "src/queueitem.js",
    "static": true,
    "longname": "src/queueitem.js~QueueItem",
    "access": "public",
    "export": true,
    "importPath": "beloader/src/queueitem.js",
    "importStyle": "QueueItem",
    "description": " QueueItem handles all item behaviours in the loading queue.\n Given its type and options, it will load the appropriate loader\n and process request.",
    "lineNumber": 21,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "interface": false,
    "extends": [
      "AbstractEventManager"
    ]
  },
  {
    "__docId__": 188,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of item. See {@link Beloader#fetch}"
      },
      {
        "nullable": null,
        "types": [
          "Beloader"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Beloader calling instance"
      },
      {
        "nullable": null,
        "types": [
          "DotObjectArray"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for QueueItem and underlying loader"
      }
    ]
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "parent",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#parent",
    "access": "public",
    "description": " Requesting parent item",
    "lineNumber": 42,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Beloader"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "_plugins",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_plugins",
    "access": "private",
    "description": " Map plugins",
    "lineNumber": 49,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "progress",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#progress",
    "access": "public",
    "description": " Stores item progress",
    "lineNumber": 60,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "DotObjectArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "state",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#state",
    "access": "public",
    "description": " Stores the state of the item",
    "lineNumber": 76,
    "since": "1.0.0",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.waiting",
        "description": "`true` if item is waiting to be processed"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.pending",
        "description": "`true` if item's loading is in progress"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.loaded",
        "description": "`true` if item's loading is completed and successfull"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.error",
        "description": "`true` if item's loading is in error, aborted or timed out"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.abort",
        "description": "`true` if item's loading is aborted"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.timeout",
        "description": "`true` if item's loading is in timeout"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.processed",
        "description": "`true` if item's process is over (loading + initialization)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.resolved",
        "description": "`true` if item's promise have been resolved"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.ready",
        "description": "`true` if item is ready to be used"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "id",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#id",
    "access": "public",
    "description": " Id of the item",
    "see": [
      "{Beloader#fetch}"
    ],
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "autoprocess",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#autoprocess",
    "access": "public",
    "description": " Autoprocess trigger",
    "see": [
      "{Beloader#fetch}"
    ],
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "async",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#async",
    "access": "public",
    "description": " Async mode trigger",
    "see": [
      "{Beloader#fetch}"
    ],
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "defer",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#defer",
    "access": "public",
    "description": " Defer mode trigger",
    "see": [
      "{Beloader#fetch}"
    ],
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "awaiting",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#awaiting",
    "access": "public",
    "description": " Awaiting mode, dependencies listing",
    "see": [
      "{Beloader#fetch}"
    ],
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "loaderReady",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#loaderReady",
    "access": "public",
    "description": " Loader ready promise",
    "lineNumber": 132,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "promise",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#promise",
    "access": "public",
    "description": " Item process promise",
    "lineNumber": 142,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "loader",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#loader",
    "access": "public",
    "description": " Loader instance",
    "lineNumber": 181,
    "since": "1.0.0",
    "type": {
      "nullable": null,
      "types": [
        "Loader"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "process",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#process",
    "access": "public",
    "description": " Process the request for the QueueItem",
    "lineNumber": 220,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "emits": [
      {
        "types": [
          "load"
        ],
        "description": ""
      },
      {
        "types": [
          "error"
        ],
        "description": ""
      },
      {
        "types": [
          "loadend"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "_loadstart",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_loadstart",
    "access": "private",
    "description": " loadstart built-in callback",
    "lineNumber": 249,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "_load",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_load",
    "access": "private",
    "description": " load built-in callback",
    "lineNumber": 278,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "_error",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_error",
    "access": "private",
    "description": " error built-in callback",
    "lineNumber": 292,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "name": "ev",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "error",
    "memberof": "src/queueitem.js~QueueItem",
    "static": false,
    "longname": "src/queueitem.js~QueueItem#error",
    "access": "public",
    "description": null,
    "lineNumber": 294,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "_abort",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_abort",
    "access": "private",
    "description": " abort built-in callback",
    "lineNumber": 304,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "_timeout",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_timeout",
    "access": "private",
    "description": " timeout built-in callback",
    "lineNumber": 315,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "_loadend",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_loadend",
    "access": "private",
    "description": " loadend built-in callback",
    "lineNumber": 326,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "_ready",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_ready",
    "access": "private",
    "description": " ready built-in callback",
    "lineNumber": 342,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "_progress",
    "memberof": "src/queueitem.js~QueueItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/queueitem.js~QueueItem#_progress",
    "access": "private",
    "description": " progress built-in callback",
    "lineNumber": 358,
    "since": "1.0.0",
    "version": "1.0.0",
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Liqueur de Toile <contact@liqueurdetoile.com>"
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "src/types/typedef.doc.js",
    "content": "/**\n*  @external {DotObjectArray} https://liqueurdetoile.github.io/DotObjectArray/\n*/\n/**\n*  @external {timestamp} https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Date/now\n*/\n/**\n*  @external {HTMLElement} https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\n*/\n/**\n*  @external {XMLHttpRequest} https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n*/\n\n/**\n*  A loader instance which vary upon the type of asset requested\n*  @typedef {Loader} Loader instance\n*  @property {QueueItem}  parent  Calling QueueItem\n*/\n\n/**\n*  A Plugin instance\n*  @typedef {Plugin} Plugin instance\n*  @property {Beloader}  parent  Calling QueueItem\n*/\n\n/**\n*  Exception for event callbacks, most of the global options are\n*  designed to set defaults values for {@link QueueItem) instance\n*  and associated {@link Loader} instances\n*\n*  @typedef {Object}  BeloaderOptions\n*  @property {Object} [on]\n*  Events callbacks\n*  \n*  When defined at Beloader level, the callback will execute as\n*  many times as the event is received. For instance, a `load` callback\n*  wille triggered each time an item is loaded.\n*  @property {boolean}  [autoprocess=true]  {@link QueueItemOptions}\n*  @property {boolean}  [async=true]  {@link QueueItemOptions}\n*  @property {boolean}  [cache=true]  {@link QueueItemOptions}\n*  @property {boolean}  [defer=false]  {@link QueueItemOptions}\n*  @property {boolean}  [fallbackSync=true]  {@link QueueItemOptions}\n*  @property {Object}  [xhr]  {@link QueueItemOptions}\n*  @property {Object|Promise}  [loader]  {@link QueueItemOptions}\n*  \n*  @example\n*  var loader = new Beloader({\n*    defer: true // load in same order than declared\n*    on: {\n*      afterprocess: () => { app.start() }\n*    }\n*  });\n*/\n\n/**\n*  Options for QueueItem are mostly for the underlying loader.\n*  Some loaders are requiring specific informations and will\n*  usually throw an error if not provided\n*  \n*\n*  @typedef {Object}  QueueItemOptions\n*  @property {Object} [on]\n*  Events callbacks\n*  \n*  When defined at QueueItem level, the callback will execute if\n*  triggered by itself or its loader. For instance, a `load` callback\n*  wille be triggered once when the item will be loaded.\n*  @property {boolean}  [autoprocess=true]\n*  if set to `false`, each item must be processed by calling its `process` method\n*  or Beloader instance `process` method for a bulk run\n*  @property {boolean}  [async=true]\n*  If `true`, QueueItem will first try to process request asynchronously\n*  @property {boolean}  [cache=true]\n*  If `false`, QueueItem will append a unique hash as query string to the request url\n*  to disable browser's built-in cache\n*  @property {boolean}  [defer=false]\n*  If `true`, QueueItem will not resolve until all previous requested items\n*  which have also `defer` option set to true is resolved\n*  @property {boolean}  [fallbackSync=true]\n*  If `true`, QueueItem will try to perform a sync request as fallback. It can\n*  be a workaround for CORS issues.\n*  @property {string}  [id]\n*  Set the ID for the QueueItem. its main use is in conjunction with `awaiting` option\n*  @property {string|string[]} [awaiting]\n*  Define the dependency(ies) ID that must be resolved before resolving current QueueItem.\n*  @property {object} [xhr] __XHR specific properties for async loading__\n*  @property {string} [xhr.method='GET']\n*  XHR method to perform request\n*  @property {mixed}  [xhr.data]\n*  Data to send in the request body. _Note: No data processing is done\n*  within the core basic XHR instance_\n*  @property {Promise|Object} [loader]\n*  __Custom loaders__\n*  \n*  If provided as a promise callback, the loader will be used for `custom` type\n*  requests.\n*  Alternatively, you can provide loader replacements for known types (see below)\n*  @property {Promise}  [loader.sync]\n*  Custom loader for sync requests\n*  \n*  See {@link AbstractLoader#sync}\n*  @property {Promise}  [loader.async]\n*  Custom loader for async requests\n*  \n*  See {@link AbstractLoader#async}\n*  \n*  \n*  @example\n*  var loader = new Beloader();\n*  \n*  loader.fetch('script', {\n*    url: 'https://cdn.jsdelivr.net/npm/elementify@latest',\n*    async: false\n*  }); \n*/\n\n/**\n*  Stores a BeLoader instance real time progress\n*  \n*  Statistics can be accessed using DotObjectArray methods.\n*  \n*  @example\n*  var loader = new Beloader({\n*    defer: true // load in same order than declared\n*    on: {\n*      afterprocess: () => { app.start() }\n*    }\n*  });\n*  \n*  loader.fetchAll({\n*    'js': 'https://cdn.jsdelivr.net/npm/elementify@latest',\n*    'font': {\n*      webfont: {\n*        google: {\n*          families: ['Droid Sans', 'Droid Serif']\n*        }\n*      }\n*    },\n*    'js': 'https://myserver.com/myapp.js'\n*  });\n*  \n*  loader.progress.data.items.total; // returns 2\n*  loader.progress.pull('items.total'); // returns 2\n*\n*  @typedef {DotObjectArray}  BeloaderProgress\n*  \n*  @property {Object} items\n*  __Items count container__\n*  @property {number} items.total\n*  Total items in Beloader instance\n*  @property {number} items.waiting\n*  Total items that are waiting to be processed\n*  @property {number} items.pending\n*  Total items that are currently processed\n*  @property {number} items.processed\n*  Total items that have been processed\n*  @property {number} items.loaded\n*  Total items that have been sucessfully loaded\n*  @property {number} items.error\n*  Total items which load have failed on error\n*  @property {number} items.abort\n*  Total items which load have been aborted\n*  @property {number} items.timeout\n*  Total items wich load have failed on timeout\n*  @property {number} items.ready\n*  Total items that have been loaded and post-process finished\n*  \n*  @property {Object} loading\n*  __Loading statistics__\n*  @property {timestamp} loading.start\n*  Process start timestamp\n*  @property {timestamp} loading.end\n*  Process end timestamp\n*  @property {number} loading.elapsed\n*  Duration of the process (ms)\n*  @property {number} loading.loaded\n*  Weight of loaded data. It might not be accurate\n*  because relying on {@link src/events/typedef.doc.js~progress} event\n*  @property {number} loading.rate\n*  Transfer bandwidth. It might not be accurate\n*  because relying on {@link progress} event\n*  @property {number} loading.complete\n*  Loading percentage completed. It might not be accurate\n*  because relying on {@link progress} QueueItem event\n*  @property {number} loading.total\n*  Weight of data to load. It might not be accurate\n*  because relying on {@link progress} QueueItem event and\n*  server's providing a `content-length` header.\n*/\n",
    "static": true,
    "longname": "F:/Projets/beloader/src/types/typedef.doc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "external",
    "name": "DotObjectArray",
    "externalLink": "https://liqueurdetoile.github.io/DotObjectArray/",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~DotObjectArray",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 215,
    "kind": "external",
    "name": "timestamp",
    "externalLink": "https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Date/now",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~timestamp",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 216,
    "kind": "external",
    "name": "HTMLElement",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~HTMLElement",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 217,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~XMLHttpRequest",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 218,
    "kind": "typedef",
    "name": "Loader",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~Loader",
    "access": "public",
    "description": " A loader instance which vary upon the type of asset requested",
    "properties": [
      {
        "nullable": null,
        "types": [
          "QueueItem"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      }
    ],
    "type": {
      "types": [
        "Loader"
      ],
      "optional": false,
      "name": "Loader"
    }
  },
  {
    "__docId__": 219,
    "kind": "typedef",
    "name": "Plugin",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~Plugin",
    "access": "public",
    "description": " A Plugin instance",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Beloader"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "Calling QueueItem"
      }
    ],
    "type": {
      "types": [
        "Plugin"
      ],
      "optional": false,
      "name": "Plugin"
    }
  },
  {
    "__docId__": 220,
    "kind": "typedef",
    "name": "BeloaderOptions",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~BeloaderOptions",
    "access": "public",
    "description": " Exception for event callbacks, most of the global options are\n designed to set defaults values for {@link QueueItem) instance\n and associated {@link Loader} instances",
    "examples": [
      " var loader = new Beloader({\n   defer: true // load in same order than declared\n   on: {\n     afterprocess: () => { app.start() }\n   }\n });"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "on",
        "description": "Events callbacks\n \n When defined at Beloader level, the callback will execute as\n many times as the event is received. For instance, a `load` callback\n wille triggered each time an item is loaded."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "autoprocess",
        "description": "{@link QueueItemOptions}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "async",
        "description": "{@link QueueItemOptions}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "cache",
        "description": "{@link QueueItemOptions}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "defer",
        "description": "{@link QueueItemOptions}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "fallbackSync",
        "description": "{@link QueueItemOptions}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "xhr",
        "description": "{@link QueueItemOptions}"
      },
      {
        "nullable": null,
        "types": [
          "Object",
          "Promise"
        ],
        "spread": false,
        "optional": true,
        "name": "loader",
        "description": "{@link QueueItemOptions}"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BeloaderOptions"
    }
  },
  {
    "__docId__": 221,
    "kind": "typedef",
    "name": "QueueItemOptions",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~QueueItemOptions",
    "access": "public",
    "description": " Options for QueueItem are mostly for the underlying loader.\n Some loaders are requiring specific informations and will\n usually throw an error if not provided\n ",
    "examples": [
      " var loader = new Beloader();\n \n loader.fetch('script', {\n   url: 'https://cdn.jsdelivr.net/npm/elementify@latest',\n   async: false\n }); "
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "on",
        "description": "Events callbacks\n \n When defined at QueueItem level, the callback will execute if\n triggered by itself or its loader. For instance, a `load` callback\n wille be triggered once when the item will be loaded."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "autoprocess",
        "description": "if set to `false`, each item must be processed by calling its `process` method\n or Beloader instance `process` method for a bulk run"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "async",
        "description": "If `true`, QueueItem will first try to process request asynchronously"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "cache",
        "description": "If `false`, QueueItem will append a unique hash as query string to the request url\n to disable browser's built-in cache"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "defer",
        "description": "If `true`, QueueItem will not resolve until all previous requested items\n which have also `defer` option set to true is resolved"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "fallbackSync",
        "description": "If `true`, QueueItem will try to perform a sync request as fallback. It can\n be a workaround for CORS issues."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "id",
        "description": "Set the ID for the QueueItem. its main use is in conjunction with `awaiting` option"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "awaiting",
        "description": "Define the dependency(ies) ID that must be resolved before resolving current QueueItem."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "xhr",
        "description": "__XHR specific properties for async loading__"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'GET'",
        "defaultRaw": "'GET'",
        "name": "xhr.method",
        "description": "XHR method to perform request"
      },
      {
        "nullable": null,
        "types": [
          "mixed"
        ],
        "spread": false,
        "optional": true,
        "name": "xhr.data",
        "description": "Data to send in the request body. _Note: No data processing is done\n within the core basic XHR instance_"
      },
      {
        "nullable": null,
        "types": [
          "Promise",
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "loader",
        "description": "__Custom loaders__\n \n If provided as a promise callback, the loader will be used for `custom` type\n requests.\n Alternatively, you can provide loader replacements for known types (see below)"
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": true,
        "name": "loader.sync",
        "description": "Custom loader for sync requests\n \n See {@link AbstractLoader#sync}"
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": true,
        "name": "loader.async",
        "description": "Custom loader for async requests\n \n See {@link AbstractLoader#async}"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "QueueItemOptions"
    }
  },
  {
    "__docId__": 222,
    "kind": "typedef",
    "name": "BeloaderProgress",
    "memberof": "src/types/typedef.doc.js",
    "static": true,
    "longname": "src/types/typedef.doc.js~BeloaderProgress",
    "access": "public",
    "description": " Stores a BeLoader instance real time progress\n \n Statistics can be accessed using DotObjectArray methods.\n ",
    "examples": [
      " var loader = new Beloader({\n   defer: true // load in same order than declared\n   on: {\n     afterprocess: () => { app.start() }\n   }\n });\n \n loader.fetchAll({\n   'js': 'https://cdn.jsdelivr.net/npm/elementify@latest',\n   'font': {\n     webfont: {\n       google: {\n         families: ['Droid Sans', 'Droid Serif']\n       }\n     }\n   },\n   'js': 'https://myserver.com/myapp.js'\n });\n \n loader.progress.data.items.total; // returns 2\n loader.progress.pull('items.total'); // returns 2"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "__Items count container__"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.total",
        "description": "Total items in Beloader instance"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.waiting",
        "description": "Total items that are waiting to be processed"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.pending",
        "description": "Total items that are currently processed"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.processed",
        "description": "Total items that have been processed"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.loaded",
        "description": "Total items that have been sucessfully loaded"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.error",
        "description": "Total items which load have failed on error"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.abort",
        "description": "Total items which load have been aborted"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.timeout",
        "description": "Total items wich load have failed on timeout"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "items.ready",
        "description": "Total items that have been loaded and post-process finished"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "loading",
        "description": "__Loading statistics__"
      },
      {
        "nullable": null,
        "types": [
          "timestamp"
        ],
        "spread": false,
        "optional": false,
        "name": "loading.start",
        "description": "Process start timestamp"
      },
      {
        "nullable": null,
        "types": [
          "timestamp"
        ],
        "spread": false,
        "optional": false,
        "name": "loading.end",
        "description": "Process end timestamp"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "loading.elapsed",
        "description": "Duration of the process (ms)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "loading.loaded",
        "description": "Weight of loaded data. It might not be accurate\n because relying on {@link src/events/typedef.doc.js~progress} event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "loading.rate",
        "description": "Transfer bandwidth. It might not be accurate\n because relying on {@link progress} event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "loading.complete",
        "description": "Loading percentage completed. It might not be accurate\n because relying on {@link progress} QueueItem event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "loading.total",
        "description": "Weight of data to load. It might not be accurate\n because relying on {@link progress} QueueItem event and\n server's providing a `content-length` header."
      }
    ],
    "type": {
      "types": [
        "DotObjectArray"
      ],
      "optional": false,
      "name": "BeloaderProgress"
    }
  },
  {
    "kind": "index",
    "content": "[![NPM](https://nodei.co/npm/beloader.png?downloads=true&downloadRank=true&stars=true)](https://www.npmjs.com/package/beloader)\r\n\r\n[![GitHub release](https://img.shields.io/github/release/beloader/beloader.svg)](https://github.com/beloader/beloader)\r\n[![Gzip size](http://img.badgesize.io/https://cdn.jsdelivr.net/npm/beloader@latest?compression=gzip&style=flat-square)](https://cdn.jsdelivr.net/npm/beloader@latest)\r\n[![Build Status](https://travis-ci.org/beloader/beloader.svg?branch=master)](https://travis-ci.org/beloader/beloader)\r\n[![Coverage Status](https://coveralls.io/repos/github/beloader/beloader/badge.svg?branch=master)](https://coveralls.io/github/beloader/beloader?branch=master)\r\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\r\n[![Documentation](https://beloader.github.io/beloader/badge.svg)](https://beloader.github.io/beloader/)\r\n\r\n[![bitHound Overall Score](https://www.bithound.io/github/beloader/beloader/badges/score.svg)](https://www.bithound.io/github/beloader/beloader)\r\n[![bitHound Code](https://www.bithound.io/github/beloader/beloader/badges/code.svg)](https://www.bithound.io/github/beloader/beloader)\r\n[![bitHound Dependencies](https://www.bithound.io/github/beloader/beloader/badges/dependencies.svg)](https://www.bithound.io/github/beloader/beloader/master/dependencies/npm)\r\n[![bitHound Dev Dependencies](https://www.bithound.io/github/beloader/beloader/badges/devDependencies.svg)](https://www.bithound.io/github/beloader/beloader/master/dependencies/npm)\r\n[![Known Vulnerabilities](https://snyk.io/test/github/beloader/beloader/badge.svg?targetFile=package.json)](https://snyk.io/test/github/beloader/beloader?targetFile=package.json)\r\n\r\n<p align=\"center\"><a href=\"https://liqueurdetoile.com\" target=\"\\_blank\"><img src=\"https://hosting.liqueurdetoile.com/logo_lqdt.png\" alt=\"Liqueur de Toile\"></a></p>\r\n\r\n# Beloader\r\nBeloader is a lightweight asset loader library. It provides simple means to trigger and monitor download of any asset (css, script, font...).\r\n\r\nIts fine-grained event management and simple interface for plugins let anyone extends it with ease to own needs.\r\n\r\nIt particularly shines as a front-end loader cause it can manage all kinds of assets and not only scripts.\r\n\r\n## Why Beloader ?\r\n- Lightweight\r\n- No more dealing with racing bets when loading in a web page or app\r\n- Highly customizable dynamically imported loaders, callbacks and plugins\r\n\r\n## Features\r\n- Can load assets asynchronously (except raw binary data)\r\n- Defer mode : each asset promise will be resolved exactly in the same order that they have been requested\r\n- Awaiting mode : an asset promise will be resolved only when its declared dependencies are resolved\r\n- Promise based : Each asset loading (item) exposes a promise interface that is resolved when asset ready or rejected in case of error\r\n- Event based : You can hook custom callbacks at each step trigerred by specific events or create customs ones\r\n- Plugin friendly : Beloader architecture makes adding plugins a breeze\r\n\r\n## Installation, how-to and API reference\r\nYou can read [Beloader manual](https://beloader.github.io/beloader/manual/index.html) or [API reference](https://beloader.github.io/beloader/identifiers.html)\r\n\r\n## Bugs and features requests\r\nBeloader is test-driven though it did not prevent all issues. Please report [here](https://github.com/liqueurdetoile/beloader/issues) any trouble or features request.\r\n\r\n## Want to help ?\r\nThere is many more to do, implements specific loaders or create plugins. Don't mind to fork Beloader, tweak it and submit a pull request :wink:\r\n\r\n## Todo\r\n- [ ] Add an HTML loader\r\n- [ ] Add an audio loader (or plugin because renderer ?)\r\n- [ ] Add a video loader (or plugin because renderer ?)\r\n- [ ] Create a bundler engine to build a custom unique script file with choosen loaders and plugins\r\n- [ ] Create advanced demos\r\n- [ ] Create more plugins :wink:\r\n- [ ] Create tests to improve coverage\r\n",
    "longname": "F:\\Projets\\beloader\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"beloader\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Highly customizable and lightweight assets loader based on dynamic imports\",\n  \"main\": \"dist/beloader.min.js\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"scripts\": {\n    \"build\": \"webpack --config webpack.conf/build.js -p\",\n    \"dev\": \"webpack --progress --colors --watch --config webpack.conf/dev.js\",\n    \"test\": \"./node_modules/.bin/karma start --single-run --browsers ChromeHeadless && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\",\n    \"test:dry\": \"./node_modules/.bin/karma start --single-run --browsers ChromeHeadless\",\n    \"test:dev\": \"karma start --browsers ChromeHeadless\",\n    \"docs\": \"./node_modules/.bin/esdoc\",\n    \"prepub\": \"npm run test:dry && npm run build && npm run docs\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.2.2\",\n    \"babel-loader\": \"^7.1.3\",\n    \"babel-plugin-syntax-dynamic-import\": \"^6.18.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"chai\": \"^4.1.2\",\n    \"clean-webpack-plugin\": \"^0.1.19\",\n    \"color-themes-for-google-code-prettify\": \"^2.0.4\",\n    \"coveralls\": \"^3.0.0\",\n    \"css-loader\": \"^0.28.11\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-inject-script-plugin\": \"^1.0.0\",\n    \"esdoc-inject-style-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.19.1\",\n    \"eslint-loader\": \"^1.9.0\",\n    \"html-loader\": \"^0.5.1\",\n    \"istanbul-instrumenter-loader\": \"^3.0.1\",\n    \"karma\": \"^2.0.0\",\n    \"karma-babel-preprocessor\": \"^7.0.0\",\n    \"karma-chai\": \"^0.1.0\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"^1.4.1\",\n    \"karma-firefox-launcher\": \"^1.1.0\",\n    \"karma-ie-launcher\": \"^1.0.0\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-opera-launcher\": \"^1.0.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\n    \"karma-safari-launcher\": \"^1.0.0\",\n    \"karma-sinon\": \"^1.0.5\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-webpack\": \"2.0.6\",\n    \"mocha\": \"^5.0.5\",\n    \"phantomjs-prebuilt\": \"^2.1.16\",\n    \"postcss-cssnext\": \"^3.1.0\",\n    \"postcss-loader\": \"^2.1.3\",\n    \"postcss-reporter\": \"^5.0.0\",\n    \"puppeteer\": \"^1.2.0\",\n    \"semantic-release\": \"^15.1.4\",\n    \"sinon\": \"^4.5.0\",\n    \"style-loader\": \"^0.20.2\",\n    \"sugarss\": \"^1.0.1\",\n    \"webpack\": \"^3.11.0\",\n    \"webpack-bundle-analyzer\": \"^2.11.0\",\n    \"webpack-merge\": \"^4.1.2\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/beloader/beloader.git\"\n  },\n  \"keywords\": [\n    \"loader\",\n    \"asset loader\",\n    \"app loader\",\n    \"promise\",\n    \"events\"\n  ],\n  \"author\": \"Liqueur de Toile\",\n  \"license\": \"AGPL-3.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/beloader/beloader/issues\"\n  },\n  \"homepage\": \"https://github.com/beloader/beloader\",\n  \"dependencies\": {\n    \"dot-object-array\": \"^3.1.0\",\n    \"es6-promise\": \"^4.2.4\",\n    \"uniqid\": \"^4.1.1\",\n    \"webfontloader\": \"^1.6.28\"\n  }\n}\n",
    "longname": "F:\\Projets\\beloader\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "content": "# Beloader manual\n\n",
    "longname": "F:\\Projets\\beloader\\docs\\manual\\md\\index.md",
    "name": "./docs/manual/md/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "F:\\Projets\\beloader\\docs\\manual\\md\\installation.md",
    "name": "./docs/manual/md/installation.md",
    "content": "# Installation\n\nBeloader is built on UMD architecture and can be embedded as a module or standalone as browser script.\n\n## As a module\n```\nnpm install beloader\n```\n\nor\n```\nyarn add beloader\n```\n\nThen simply require/import it :\n```javascript\nimport Beloader from 'beloader';\nconst {Beloader} = require('beloader');\nconst Beloader = require('beloader').default;\nconst Beloader = require('beloader').Beloader;\n```\n\nBeloader have been built on a ECMA6 class pattern and transpiled.\n\n## In browser\nBeloader is available as CDN external library or can easily be installed locally. Beloader is using dynamic imports\nwith modules. You must require the full path, otherwise Beloader won't be able to resolve modules URL.\n\n### Bundle\n```html\n<script type=\"text/javascript\" src=\"https://bundle.run/beloader@latest\"></script>\n```\nBundle generate a beloader object that hoist Beloader constructor. So, you must call it like this :\n```javascript\nvar loader = new beloader.Beloader();\n```\n\n### JsDelivr\n```html\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/beloader@latest\"></script>\n```\n\n### Unpkg\n```html\n<script type=\"text/javascript\" src=\"https://unpkg.com/beloader@latest\"></script>\n```\n\n### Local install\nFor browser install, you can simply fetch folder `dist` in [this repo](https://github.com/liqueurdetoile/beloader) (or clone it) and load the script :\n```html\n<script type=\"text/javascript\" src=\"myJsFolder/beloader/dist/beloader.min.js\"></script>\n```\n\n## Using Beloader in browser\nThere is two ways to embed Beloader in browser to be sure it will be available at runtime :\n\n__Calling it synchronously (in <HEAD> or <BODY> but before subsequent calls)__\n\n```html\n<script type=\"text/javascript\" src=\"beloader.min.js\"></script>\n```\n\n__Add a callback when loading asynchronously__\n\n```html\n<script type=\"text/javascript\" src=\"beloader.min.js\" onload=\"start()\" async></script>\n<!-- or -->\n<script type=\"text/javascript\" src=\"beloader.min.js\" onload=\"start()\" defer></script>\n\n<script>\n  function start() { //stuff here }\n</script>\n```\n\n## Browser compatibility\nBeloader should work with no tweaks in all modern browsers and IE >= 10 (even 8 if not using webfontloader).\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "F:\\Projets\\beloader\\docs\\manual\\md\\basic.md",
    "name": "./docs/manual/md/basic.md",
    "content": "# Basic usage\n\n## Assets loading\nIn most case a simple instance with no options will be enough and you can then fetch assets :\n\n```javascript\nvar loader = new Beloader();\n\nloader.fetch('script', 'https://code.jquery.com/jquery-3.3.1.js');\nloader.fetch('font', {\n  webfont: {\n    google: {\n      families: ['Droid Sans', 'Droid Serif']\n    }\n  }\n});\n```\n\nWith this, we're not doing far better than directly embedding a script and a link in\nHTML code, except loading is asynchronous.\n\n## Using promises to perform actions when assets are loaded\n\nIf you want to perform things when assets are loaded, you can use the exposed `promise` property of an item :\n\n```javascript\nvar loader = new Beloader();\n\nloader.fetch('script', 'https://cdn.jsdelivr.net/npm/elementify@latest')\n  .promise.then(function() {\n    console.log('Elementify loaded !');\n  });\n\nloader.fetch('font', {\n  webfont: {\n    google: {\n      families: ['Droid Sans', 'Droid Serif']\n    }\n  }\n}).then(function() {\n  var div = document.createElement('div');\n  \n  div.innerHTML = '<span style=\"font-family:\\'Droid Sans\\'\">Hello, world</span>';\n  document.body.appendChild(div);\n});\n```\n\nYou may notice that it will be way better to use [Elementify](https://liqueurdetoile.github.io/Elementify/)\nto perform the body insertion when\nfont has loaded. But, we have to make sure that Elementify has loaded __*before*__ font.\n\nThe first idea may be to nest fetching and it will work but at the cost of losing\nparallels ajax loadings. Anyway, there is better solutions.\n\n### Defering assets loading\nBeloader can resolve loadings in the same order that they have been added to the queue.\n\n```javascript\nvar loader = new Beloader({\n  defer: true // Change is here\n});\n\nloader.fetch('script', 'https://cdn.jsdelivr.net/npm/elementify@latest')\n  .promise.then(function() {\n    Elementify.load();\n  });\n\nloader.fetch('font', webfont: {\n  google: {\n    families: ['Droid Sans', 'Droid Serif']\n  }\n}).then(function() {\n  Q('body').append('<div style=\"font-family:\\'Droid Sans\\'\">Hello, world</div>');\n});\n```\n\nIn that case, Beloader will take care of waiting for Elementify request to resolve before resolving font.\nIt is possible to use the defer behaviour only on a subset of fetched items\nby providing defer as an option to the `fetch` instead of as a global trigger.\n\n### Awaiting dependencies\nIn some cases, multiple dependencies can't be simply resolved with defer. Beloader\noffers an awaiting option to deal with complex patterns.\n\n```javascript\nvar loader = new Beloader();\n\nloader.fetch('script', {\n  id: 'elementify', // Change is here\n  url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n})\n  .promise.then(function() {\n    Elementify.load();\n  });\n\nloader.fetch('script', {\n   id: 'lodash',\n  url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js'\n})\n  .promise.then(function() {\n    Elementify.load();\n  });\n  \nloader.fetch('font', {\n  awaiting: ['elementify','lodash'] // Change is here\n  webfont: {\n    google: {\n      families: ['Droid Sans', 'Droid Serif']\n    }\n  }\n}).then(function() {\n  Q('body').append('<div style=\"font-family:\\'Droid Sans\\'\">Hello, world</div>');\n});\n```\n\n## Bulk assets loading\nYou can provide multiple assets request in a single call. Just set\nan id to each asset and swap type as an option value.\n\n```javascript\nvar loader = new Beloader();\nvar items = {\n  elementify: {\n    type: 'script',\n    url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n  },\n  lodash: {\n    type: 'script',\n    url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js'\n  },\n  font: {\n    type: 'font',\n    webfont: {\n      google: {\n        families: ['Droid Sans', 'Droid Serif']\n      }\n    }\n  }\n};\n\nloader.fetchAll(items).promise.then(items => {\n  Elementify.load();\n  Q('body').append('<div style=\"font-family:\\'Droid Sans\\'\">Hello, world</div>');\n});\n```\nEach item is available in an array indexed in the same order that they have been declared.\nThe `fetchAll` promise only resolves when all assets are loaded. If one asset is in error,\nthe promise will be rejected.\n\n\n## Delaying queue process\nAs a default, Beloader will automatically process all fetch requests. In some cases,\nyou may want to delay the process.\n\n```javascript\nvar loader = new Beloader({\n  autoprocess: false // Add this options\n});\n\nloader.fetch('script', {\n  id: 'elementify',\n  url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n})\n  .promise.then(function() {\n    Elementify.load();\n  });\n\nloader.fetch('script', {\n  id: 'lodash',\n  url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js'\n})\n  .promise.then(function() {\n    Elementify.load();\n  });\n  \nloader.fetch('font', {\n  awaiting: ['elementify','lodash']\n  webfont: {\n    google: {\n      families: ['Droid Sans', 'Droid Serif']\n    }\n  }\n}).then(function() {\n  Q('body').append('<div style=\"font-family:\\'Droid Sans\\'\">Hello, world</div>');\n});\n\n// Do things that take time and must be done before processing\n\nloader.process(); // Order Beloader to process the loading queue\n```\n\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "F:\\Projets\\beloader\\docs\\manual\\md\\loaders.md",
    "name": "./docs/manual/md/loaders.md",
    "content": "# Loaders\n\n## Built-in loaders\n\n### Using built-in loaders\nLoaders are automatically selected given the `type` parameter value\nprovided to `fetch` or option provided to `fetchAll`.\n\nSee [API](../class/src/beloader.js~Beloader.html#instance-method-fetch) for the list of loaders.\n\nEach QueueItem instance exposes a `loader` property where the given loader instance is accessible.\n\n### Script loader\nThis loader is designed to load scripts sync or async (default).\nIt is triggered when requested `type` value is set to `js`, `script`, `javascript` or `ecmascript`.\n\nWhen loaded async, you can provide `inline` options :\n- If `false` (by default), the script is loaded through a `<script src=\"url\" async></script>` tag\n- If `true`, the script is fetched through XHR and inserted in a `<script></script>` tag\n\n### Stylesheet loader\nThis loader is designed to load stylesheets sync or async (default).\nIt is triggered when requested `type` value is set to `css`, `style`, `styles` or `stylesheet`.\n\n### Font loader\nThis loader is designed to load fonts sync (default).\nIt is triggered when requested `type` value is set to `font` or `webfont`.\n\nThe font loader relies on webfontloader api to manager font loading. It takes two steps :\n- Loading the stylesheet which describes the font\n- Loading the font file itself\n\nA font loader instance will only resolve at the very end of the process to guarantee that\nfont is ready to be used without FOUT.\n\nFor more informations about webfontloader configuration, please visit [their website](https://github.com/typekit/webfontloader).\n\n### Image loader\nThis loader is designed to load images sync or async (default).\nIt is triggered when requested `type` value is set to `img` or `image`.\n\nThe image node will be exposed as `image` property of the requested item. It has to\nbe managed programmatically or with a plugin.\n\n```javascript\nvar loader = new Beloader({\n  cache: false\n});\n\nloader.fetch('img', {\n  url: 'https://upload.wikimedia.org/wikipedia/commons/d/d9/Test.png'\n}).promise.then(item => {\n  document.body.appendChild(item.image);\n}).catch(item => {\n  console.log(item.error);\n});\n```\n\n### JSON loader\nThis loader is designed to load JSON data async (only).\nIt is triggered when requested `type` value is set to `json`.\n\nJSON data is exposed as `response` property of the requested item.\n\n### None loader\nThis is a special loader only designed to produce side-effect.\nIt's especially useful when you want to perform action at a given\nstep of the loading queue while using the `awaiting` mode.\n\n```javascript\nvar loader = new Beloader();\n\nloader.fetch('none', {\n  awaiting: ['asset1', 'asset2', 'asset5', 'asset6']\n}).then(item => {\n  // Do things when asset1, asset2, asset5 and asset6 are loaded\n  // Plugins will be available\n});\n\nloader.fetchAll({\n  'asset1' => {\n    type: 'script',\n    url: 'http://server.com/asset1'\n  },\n  'asset2' => {\n    type: 'script',\n    url: 'http://server.com/asset2'\n  },\n  'asset3' => {\n    type: 'css',\n    url: 'http://server.com/asset3'\n  },\n  'asset4' => {\n    type: 'css',\n    url: 'http://server.com/asset4'\n  },\n  'asset5' => {\n    type: 'script',\n    url: 'http://server.com/asset5'\n  },\n  'asset6' => {\n    type: 'json',\n    url: 'http://server.com/asset6'\n  },\n}).then(items => {\n  // Only resolved when all assets are resolved  \n});\n```\n\n### Plugin loader\nAnother special loader designed to load Beloader plugins asynchronously from url or official repo.\n\nSee [plugins](plugins.html) section of the manual for more informations.\n\n## Custom loaders\n\n### Tweaking XMLHttpRequest instance\nIn async mode, Beloader relies on a very simple XHR instance with nearly zero-configuration.\n\nYou can provide `xhr.method` to options for changing the request method option and `xhr.data` to\nprovide some data to send in the request body. In the latter case, data pre-processing is up to you as\nBeloader will output raw `xhr.data` content to the request body.\n\nIf you need more fine-grained control over the XHR instance, you can do it with `loadstart` event\ncallback (see [Events](events.html) section).\n\n```javascript\nvar loader = new Beloader();\n\nloader.fetch({\n  'type': 'image',\n  'url': 'http://server.com/script.js',\n  'on': {\n    'loadstart': function(event) {\n      var xhr = event.target.xhr; // Target is Loader\n      // or\n      var xhr = this.loader.xhr: // Context is QueueItem\n\n      xhr.setRequestHeader('Accept', 'weird/mimetype');\n    }\n  }\n});\n```\n\n### Replacing sync and async loading engines for built-in loaders\nIf needed, Beloader let you replace loading engines for built-in loader.\n\nIt can be useful if you wish to use a third party ajax query engine for instance like\njQuery or Request. In that case, you must take care of firing intermediate events as needed.\n\nSimply provide a new callback that returns a promise and resolve or reject it at will.\n\nThe engines can be overriden for a whole Beloader instance and/or per item added.\n\n```javascript\nvar sync = function() {\n  return new Promise((resolve, reject) => {\n    reject();\n  });\n}\n\nvar async = function() {\n  return new Promise((resolve, reject) => {\n    resolve();\n  });\n}\n\nvar loader = new Beloader({\n  loader: {\n    sync: sync // Will override all sync loader\n  }\n});\n\nloader.fetch('script', {\n  url: 'https://cdn.jsdelivr.net/npm/elementify@latest',\n  loader: {\n    async: async // Will override only async loader of this item\n  }\n});\n\n```\nThe custom loader will not override data post-process for given type.\n\n### Creating custom type and loader\nAt last, Beloader let's you create your own loader for unsupported types. The callback\nmust return and resolve or reject a promise. The callback is called within the Loader context.\n\n```javascript\nvar myLoader = function() {\n  return new Promise((resolve, reject) => {\n    // You can access QueueItem instance with this.parent\n    // You can access Beloader instance with this.parent.parent\n    // You can access plugins with this.pluginName\n    // Do things\n    if(good) resolve();\n    else reject();\n  });\n}\n\nvar loader = new Beloader();\n\nloader.fetch('custom', {\n  url: 'https://server.com',\n  loader: myLoader\n}).then(item => console.log('Hurrah!'));\n\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "F:\\Projets\\beloader\\docs\\manual\\md\\events.md",
    "name": "./docs/manual/md/events.md",
    "content": "# Events\nBeloader provides a full internal event system.\n\nFor list of the available built-in events, please check\n[API](../identifiers.html#events).\n\n## Registering callbacks to be run after of before built-in callback\nBeloader let you define if your callback must be run _before_ or _after_ the\nmatching built-in event.\n\nIf you provide a function named `pre`, the callback will be run _before_. If you\nprovide any other named function or a closure, it will be run _after_.\n\n```javascript\nvar cbBefore = function pre(event) {\n  // will be run before the built-in hook\n}\n\nvar cbAfter = function (event) {\n  // will be run after the built-in hook\n}\n```\n\n## Registering callbacks in options\nYou can register callbacks when providing options to a Beloader instance or\ncreating a QueueItem instance with `fetch`.\n\n```javascript\nvar cbBefore = function pre(event) {\n  // will be run before the built-in hook\n}\n\nvar cbAfter = function (event) {\n  // will be run after the built-in hook\n}\n\nvar loader = new Beloader({\n  on: {\n    // Will be fired at each item loadstart event\n    loadstarted: event => { console.log('Loading started for ' + event.target.parent.id) },\n    afterprocess: cbBefore // Will run before the built-in hook\n  }\n});\n\nfetch('script', {\n  id: 'elementify',\n  url: 'https://cdn.jsdelivr.net/npm/elementify@latest',\n  on: {\n    loadstarted: cbAfter // Will run after the built-in hook only for this item\n  }\n});\n\nfetch('script', {\n  id: 'lodash',\n  url: 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.5/lodash.min.js'\n});\n\n```\n\n## Registering callbacks externally\nYou can also register callbacks with the `on` method exposed by Beloader, QueueItem and each\nLoader and Plugin.\n```javascript\nvar loader = new Loader();\n\nloader.on('afterprocess', event => console.log('Over'));\n```\nYou can use this way with `autoprocess` option set to false to add event\nto QueueItem instances.\n\n## Custom events\nBeloader, QueueItem and each Loader and Plugin instance exposes a `fire` method\nto trigger events firing.\nYou can use it to override internal events firing or add your custom ones.\n\nEvents are only bubbling up like this :\n- Loader -> QueueItem -> Beloader\n- Plugin -> Beloader\n\nAn event fired at the Beloader level will only affect the Beloader instance.\n\n## Controlling events\nThe Beloader event object mimics the native Event object and exposes 3 methods to control events :\n- `BeloaderEvent#preventdefault()` : If called inside a callback that will run _before_ the built-in one, it will\nprevent default behaviour. It will not stop event propagation.\n- `BeloaderEvent#stopPropagation()` : Prevent the event from bubbling up\n- `BeloaderEvent#stopImmediatePropagation()` : Prevent any further callbacks to be called, even buit-in ones",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "F:\\Projets\\beloader\\docs\\manual\\md\\plugins.md",
    "name": "./docs/manual/md/plugins.md",
    "content": "# Plugins\nPlugins are very easy to implements in order to extends Beloader functionnalities and/or behaviours.\n\n## Load plugins\n\n### Name, URL and alias\nYou can provide up to three options when requiring a plugin :\n- name : name of the plugin that must match the name of the variable\nexposed in global scope for this given plugin\n- url : URL to load plugin from. If not provided, Beloader will assume that it must fetch\nplugin in official repo and will try to fetch the `beloader-pluginName` script ('_beloader-_' is\nautomatically prependend to plugin name) from\njsDelivr CDN : `https://cdn.jsdelivr.net/gh/beloader/beloader-pluginName@latest`\n- alias: Name of the variable that will be exposed in Beloader, QueueItem, Loader and Plugin instances\nto access plugin properties and methods. If not provided, the `name` will be used.\n\nOnly the plugin name is mandatory. Plugin architecture is designed to avoid using `eval`.\nTherefore, plugin are always loaded and evaluated in global namespace that may cause\nsome conflicts for short plugins name.\n\n### Fetch plugins\nYou can directly use the plugin loader to fetch plugins. As soon as they will be loaded, they will be available\nin Beloader, QueueItem, Loader and other Plugin instances.\n\nIn case of long name, you can provide an alias that will be used as var name when using plugin\n\n```javascript\nvar loader = new Beloader({\n  defer: true // will load plugins in the same order\n});\n\nloader.fetch('plugin', {\n  name: 'plugin', // will look for beloader-plugin in official repo\n  alias: 'p'\n});\n\nloader.fetch('plugin', {\n  name: 'myplugin',\n  url: 'myURLforThisplugin'\n});\n\n// We can use them safely thanks to defer\nloader.fetch('none').promise.then(item => {\n  p.doSomething(); // use alias\n  myplugin.doSomething();\n});\n```\n\nYou can use `awaiting` mode for more exotic loading patterns or fetchAll to concatenate calls to plugins.\n\n### Fetch plugins at Beloader instance creation\nBeloader lets you define an array of plugins requires when creating an instance.\n\nIn that case, you must use the `ready` promise property to ensure\nplugins are resolved firts or set global `defer` option to `true`.\n\n```javascript\nvar loader = new Beloader({\n  plugins: [\n    'plugin', // only the name\n    {myplugin: 'myURLforThisplugin'}, // shortcut for name + url\n    {\n      name: 'myLongPluginName', // Full import format\n      url: 'http://url',\n      alias: 'mlp'\n    }\n  ]\n});\n\nloader.ready.then(() => {\n  fetch('none').promise.then(item => {\n    plugin.doSomething();\n    myplugin.doSomething();\n    mlp.doSomething();\n  });\n});\n```\n\n## Custom instant plugins\nYou can easily add your own plugins to a Beloader instance with the `pluginize` method. Beloader\nwill wrap your code inside an `AbstractPlugin` instance so all other plugins and events methods will be available.\n\nBeloader will also always calls the `init` function of a plugin when loaded/pluginized.\nIf the custom plugin is a function, Beloader will create an instance rather than adding raw prototype. It lets\nyou use the init function as a constructor. The third argument of `pluginize` will be passed\nas argument to init function _(and also available under `this.options` anyway)_.\n\n`init` is also a good place to register callbacks for events if needed.\n\n```javascript\nvar myPlugin1 = {\n  mystuff: function() {\n    console.log('Yuups');\n  }\n};\n\nvar myPluginClass = function() {\n  this.init = function(options) {\n    this.index = options.index;\n  };\n\n  this.mystuff = function() {\n    console.log('Yuups' + this.index);\n  };\n};\n\nvar loader = new Beloader();\n\nloader.pluginize('p1', myPlugin1);\nloader.pluginize('p2', myPluginClass, {index: 2});\nloader.pluginize('p3', myPluginClass, {index: 3});\n\nloader.ready.then(() => {\n  fetch('none').promise.then(item => {\n    p1.mystuff(); // echo 'Yuups'\n    p2.mystuff(); // echo 'Yuups2'\n    p3.mystuff(); // echo 'Yuups3'\n  });\n});\n```\n\n## Async Plugins\nA plugin can expose a `promise` property to be treated asynchronously.\nPluginLoader will wait for this promise to be resolved for considering\nthat plugin is ready. It can be useful if plugin have to require some dependencies to be loaded\nbefore being usable.\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 223,
    "kind": "testFile",
    "name": "tests/abstractloader.spec.js",
    "content": "// import Beloader from 'beloader';\n// import AbstractLoader from 'core/AbstractLoader';\n\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/abstractloader.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 224,
    "kind": "testFile",
    "name": "tests/beloader.spec.js",
    "content": "import {Beloader} from 'beloader';\nimport QueueItem from 'queueitem';\n\n/**\n*  @test {Beloader#constructor}\n*/\ndescribe('Constructor', function () {\n  it('should create an instance with no debug', function () {\n    var loader = new Beloader();\n\n    loader.should.be.instanceof(Beloader);\n  });\n\n  it('should throw an exception with unknown type and no custom loader', function () {\n    var loader = new Beloader();\n\n    expect(loader.fetch.bind(loader, 'unknown')).to.throw(TypeError);\n  });\n});\n\n/**\n*  @test {Beloader#fetch}\n*/\ndescribe('Fetching an item async', function () {\n  this.timeout(5000);\n\n  it('should fetch with none loader', function () {\n    var loader = new Beloader();\n\n    var t = loader.fetch('none').promise.then(item => {\n      var spy = sinon.spy();\n\n      spy();\n      spy.called.should.be.true;\n    });\n\n    return t;\n  });\n\n  it('should fetch css', function () {\n    var loader = new Beloader();\n    var item = loader.fetch('css', 'https://fonts.googleapis.com/css?family=Poppins:900');\n\n    item.promise.should.be.instanceof(Promise);\n    item.state.processed.should.be.false;\n\n    return item.promise.then(i => {\n      i.should.be.instanceof(QueueItem);\n      i.state.resolved.should.be.true;\n      i.state.loaded.should.be.true;\n      i.state.ready.should.be.true;\n      i.state.error.should.be.false;\n    });\n  });\n\n  it('should fetch a script and fail loading without fallback', function () {\n    var loader = new Beloader();\n    var item = loader.fetch('script', {\n      url: 'https://code.jquery.com/jquery-3.3.5.js',\n      fallbackSync: false\n    });\n\n    return item.promise['catch'](i => {\n      i.state.resolved.should.be.true;\n      i.state.loaded.should.be.false;\n      i.state.ready.should.be.false;\n      i.state.error.should.be.true;\n    });\n  });\n\n  it('should fetch a script and fail loading with fallback to sync', function () {\n    var loader = new Beloader();\n    var item = loader.fetch('script', {\n      url: 'https://code.jquery.com/jquery-3.3.1.js'\n    });\n\n    return item.promise['catch'](i => {\n      i.should.be.instanceof(QueueItem);\n      i.state.resolved.should.be.true;\n      i.state.loaded.should.be.false;\n      i.state.ready.should.be.false;\n      i.state.error.should.be.true;\n    });\n  });\n});\n\ndescribe('Fetching an item sync', function () {\n  it('should load sync', function () {\n    var loader = new Beloader({async: false});\n\n    return loader.fetch('script', 'https://cdn.jsdelivr.net/npm/elementify@latest')\n      .promise\n      .then(item => {\n        item.state.ready.should.be.true;\n      });\n  });\n});\n\ndescribe('Fetching and defer items', function () {\n  this.timeout(5000);\n\n  it('should defer loading with per item setting', function () {\n    var spy1 = sinon.spy();\n    var spy2 = sinon.spy();\n    var spy3 = sinon.spy();\n    var loader = new Beloader({});\n\n    loader.fetch('font', {\n      webfont: {\n        google: {\n          families: ['Droid Sans', 'Droid Serif']\n        }\n      },\n      defer: true\n    }).promise.then(() => spy1());\n\n    loader.fetch('script', {\n      url: 'https://code.jquery.com/jquery-3.3.1.js',\n      defer: true\n    }).promise.then(() => spy2());\n\n    return loader.fetch('style', {\n      url: 'https://fonts.googleapis.com/css?family=Poppins:900',\n      defer: true\n    }).promise.then(() => spy3()).then(() => {\n      spy1.calledBefore(spy2).should.be.true;\n      spy2.calledBefore(spy3).should.be.true;\n    });\n  });\n\n  it('should defer loading with global setting', function () {\n    var spy1 = sinon.spy();\n    var spy2 = sinon.spy();\n    var spy3 = sinon.spy();\n    var loader = new Beloader({defer: true});\n\n    loader.fetch('font', {\n      webfont: {\n        google: {\n          families: ['Droid Sans', 'Droid Serif']\n        }\n      }\n    }).promise.then(() => spy1());\n\n    loader.fetch('script', {\n      url: 'https://code.jquery.com/jquery-3.3.1.js'\n    }).promise.then(() => spy2());\n\n    return loader.fetch('style', {\n      url: 'https://fonts.googleapis.com/css?family=Poppins:900'\n    }).promise.then(() => spy3()).then(() => {\n      spy1.calledBefore(spy2).should.be.true;\n      spy2.calledBefore(spy3).should.be.true;\n    });\n  });\n});\n\ndescribe('Fetching and await dependencies', function () {\n  this.timeout(5000);\n\n  it('should await dependencies', function () {\n    var spy1 = sinon.spy();\n    var spy2 = sinon.spy();\n    var spy3 = sinon.spy();\n    var loader = new Beloader();\n\n    loader.fetch('font', {\n      id: 'font',\n      awaiting: 'jquery',\n      cache: 'false',\n      webfont: {\n        google: {\n          families: ['Droid Sans', 'Droid Serif']\n        }\n      },\n      on: {\n        load: () => console.log('loaded: font')\n      }\n    }).promise.then(() => {\n      console.log('resolved: font');\n      spy2();\n    });\n\n    loader.fetch('script', {\n      id: 'jquery',\n      url: 'https://code.jquery.com/jquery-3.3.1.js',\n      cache: 'false',\n      on: {\n        load: () => console.log('loaded: jquery')\n      }\n    }).promise.then(() => {\n      console.log('resolved: jquery');\n      spy1();\n    });\n\n    return loader.fetch('stylesheet', {\n      id: 'Poppins',\n      url: 'https://fonts.googleapis.com/css?family=Poppins:900',\n      cache: 'false',\n      awaiting: ['jquery', 'font'],\n      on: {\n        load: () => console.log('loaded: Poppins')\n      }\n    }).promise.then(() => {\n      spy3();\n    }).then(() => {\n      console.log('resolved: Poppins');\n      spy1.calledBefore(spy2).should.be.true;\n      spy2.calledBefore(spy3).should.be.true;\n    });\n  });\n});\n\ndescribe('fetchAll method', function () {\n  it('should load and resolve', function () {\n    var loader = new Beloader({\n      defer: true // load in same order than declared\n    });\n\n    return loader.fetchAll({\n      elementify: {\n        type: 'js',\n        url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n      },\n      Droid: {\n        type: 'webfont',\n        webfont: {\n          google: {\n            families: ['Droid Sans', 'Droid Serif']\n          }\n        }\n      }\n    }).promise.then(items => {\n      items[0].id.should.equal('elementify');\n      items[0].state.ready.should.true;\n      items[1].id.should.equal('Droid');\n      items[1].state.ready.should.true;\n    });\n  });\n});\n\ndescribe('Manual process', function () {\n  it('should load and resolve', function () {\n    var loader = new Beloader({\n      autoprocess: false\n    });\n\n    var items = loader.fetchAll({\n      elementify: {\n        type: 'js',\n        url: 'https://cdn.jsdelivr.net/npm/elementify@latest'\n      },\n      Droid: {\n        type: 'webfont',\n        webfont: {\n          google: {\n            families: ['Droid Sans', 'Droid Serif']\n          }\n        }\n      }\n    }).promise.then(items => {\n      items[0].id.should.equal('elementify');\n      items[0].state.ready.should.true;\n      items[1].id.should.equal('Droid');\n      items[1].state.ready.should.true;\n    });\n\n    loader._items.forEach(item => {\n      item.state.waiting.should.be.true;\n    });\n    loader.process();\n\n    return items;\n  });\n});\n\ndescribe('Disable cache testing', function () {\n  it('should fetch a script', function () {\n    var loader = new Beloader({\n      cache: false\n    });\n\n    return loader.fetch('script', 'https://cdn.jsdelivr.net/npm/elementify@latest')\n      .promise.then(item => {\n        item.state.ready.should.be.true;\n      });\n  });\n\n  it('should fetch a script with a query string', function () {\n    var loader = new Beloader({\n      cache: false\n    });\n\n    return loader.fetch('script', 'https://cdn.jsdelivr.net/npm/elementify@latest?test=fixture')\n      .promise.then(item => {\n        item.state.ready.should.be.true;\n      });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/beloader.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe0",
    "access": null,
    "description": "Constructor",
    "lineNumber": 7,
    "testTargets": [
      "Beloader#constructor"
    ]
  },
  {
    "__docId__": 226,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "tests/beloader.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe0.it1",
    "access": null,
    "description": "should create an instance with no debug",
    "lineNumber": 8
  },
  {
    "__docId__": 227,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "tests/beloader.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe0.it2",
    "access": null,
    "description": "should throw an exception with unknown type and no custom loader",
    "lineNumber": 14
  },
  {
    "__docId__": 228,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe3",
    "access": null,
    "description": "Fetching an item async",
    "lineNumber": 24,
    "testTargets": [
      "Beloader#fetch"
    ]
  },
  {
    "__docId__": 229,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "tests/beloader.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe3.it4",
    "access": null,
    "description": "should fetch with none loader",
    "lineNumber": 27
  },
  {
    "__docId__": 230,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "tests/beloader.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe3.it5",
    "access": null,
    "description": "should fetch css",
    "lineNumber": 40
  },
  {
    "__docId__": 231,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "tests/beloader.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe3.it6",
    "access": null,
    "description": "should fetch a script and fail loading without fallback",
    "lineNumber": 56
  },
  {
    "__docId__": 232,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "tests/beloader.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe3.it7",
    "access": null,
    "description": "should fetch a script and fail loading with fallback to sync",
    "lineNumber": 71
  },
  {
    "__docId__": 233,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe8",
    "access": null,
    "description": "Fetching an item sync",
    "lineNumber": 87
  },
  {
    "__docId__": 234,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "tests/beloader.spec.js~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe8.it9",
    "access": null,
    "description": "should load sync",
    "lineNumber": 88
  },
  {
    "__docId__": 235,
    "kind": "test",
    "name": "describe10",
    "testId": 10,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe10",
    "access": null,
    "description": "Fetching and defer items",
    "lineNumber": 99
  },
  {
    "__docId__": 236,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "tests/beloader.spec.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe10.it11",
    "access": null,
    "description": "should defer loading with per item setting",
    "lineNumber": 102
  },
  {
    "__docId__": 237,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "tests/beloader.spec.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe10.it12",
    "access": null,
    "description": "should defer loading with global setting",
    "lineNumber": 131
  },
  {
    "__docId__": 238,
    "kind": "test",
    "name": "describe13",
    "testId": 13,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe13",
    "access": null,
    "description": "Fetching and await dependencies",
    "lineNumber": 158
  },
  {
    "__docId__": 239,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "tests/beloader.spec.js~describe13",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe13.it14",
    "access": null,
    "description": "should await dependencies",
    "lineNumber": 161
  },
  {
    "__docId__": 240,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe15",
    "access": null,
    "description": "fetchAll method",
    "lineNumber": 214
  },
  {
    "__docId__": 241,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "tests/beloader.spec.js~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe15.it16",
    "access": null,
    "description": "should load and resolve",
    "lineNumber": 215
  },
  {
    "__docId__": 242,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe17",
    "access": null,
    "description": "Manual process",
    "lineNumber": 242
  },
  {
    "__docId__": 243,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "tests/beloader.spec.js~describe17",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe17.it18",
    "access": null,
    "description": "should load and resolve",
    "lineNumber": 243
  },
  {
    "__docId__": 244,
    "kind": "test",
    "name": "describe19",
    "testId": 19,
    "memberof": "tests/beloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/beloader.spec.js~describe19",
    "access": null,
    "description": "Disable cache testing",
    "lineNumber": 277
  },
  {
    "__docId__": 245,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "tests/beloader.spec.js~describe19",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe19.it20",
    "access": null,
    "description": "should fetch a script",
    "lineNumber": 278
  },
  {
    "__docId__": 246,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "tests/beloader.spec.js~describe19",
    "testDepth": 1,
    "static": true,
    "longname": "tests/beloader.spec.js~describe19.it21",
    "access": null,
    "description": "should fetch a script with a query string",
    "lineNumber": 289
  },
  {
    "__docId__": 247,
    "kind": "testFile",
    "name": "tests/customloader.spec.js",
    "content": "import Beloader from 'beloader';\n\ndescribe('Custom loader callback', function () {\n\n  it('should run a custom loader callback that resolve', function () {\n    var loader = new Beloader();\n    var l = function () {\n      return new Promise((resolve, reject) => {\n        resolve();\n      });\n    };\n\n    return loader.fetch('custom', {loader: l})\n      .promise.then(item => item.state.ready.should.be.true);\n  });\n\n  it('should run a custom loader callback that reject', function () {\n    var loader = new Beloader({autoprocess: false});\n    var l = function () {\n      return new Promise((resolve, reject) => {\n        reject();\n      });\n    };\n\n    var item = loader.fetch('custom', {loader: l});\n\n    return item.process().promise['catch'](item => {\n      item.state.error.should.be.true;\n    });\n  });\n\n  it('should throw an exception if loader not a Function', function () {\n    var loader = new Beloader({autoprocess: false});\n    var l = 'wrong';\n\n    var item = loader.fetch('custom', {loader: l});\n\n    return item.process().promise['catch'](item => {\n      item.should.be.instanceof(TypeError);\n    });\n  });\n\n  it('should override sync loader', function () {\n    var spy = sinon.spy();\n    var sync = function () {\n      return new Promise((resolve, reject) => {\n        spy();\n        resolve();\n      });\n    };\n    var loader = new Beloader({\n      loader: {\n        sync: sync\n      }\n    });\n\n    return loader.fetch('script', {\n      url: 'https://cdn.jsdelivr.net/npm/elementify@latest',\n      async: false\n    }).promise.then(item => {\n      spy.called.should.be.true;\n    });\n  });\n\n  it('should override async loader', function () {\n    var spy = sinon.spy();\n    var async = function () {\n      return new Promise((resolve, reject) => {\n        spy();\n        resolve();\n      });\n    };\n    var loader = new Beloader({\n      loader: {\n        async: async\n      }\n    });\n\n    return loader.fetch('script', 'https://cdn.jsdelivr.net/npm/elementify@latest')\n      .promise.then(item => {\n        spy.called.should.be.true;\n      });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/customloader.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "test",
    "name": "describe22",
    "testId": 22,
    "memberof": "tests/customloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/customloader.spec.js~describe22",
    "access": null,
    "description": "Custom loader callback",
    "lineNumber": 3
  },
  {
    "__docId__": 249,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "tests/customloader.spec.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "tests/customloader.spec.js~describe22.it23",
    "access": null,
    "description": "should run a custom loader callback that resolve",
    "lineNumber": 5
  },
  {
    "__docId__": 250,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "tests/customloader.spec.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "tests/customloader.spec.js~describe22.it24",
    "access": null,
    "description": "should run a custom loader callback that reject",
    "lineNumber": 17
  },
  {
    "__docId__": 251,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "tests/customloader.spec.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "tests/customloader.spec.js~describe22.it25",
    "access": null,
    "description": "should throw an exception if loader not a Function",
    "lineNumber": 32
  },
  {
    "__docId__": 252,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "tests/customloader.spec.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "tests/customloader.spec.js~describe22.it26",
    "access": null,
    "description": "should override sync loader",
    "lineNumber": 43
  },
  {
    "__docId__": 253,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "tests/customloader.spec.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "tests/customloader.spec.js~describe22.it27",
    "access": null,
    "description": "should override async loader",
    "lineNumber": 65
  },
  {
    "__docId__": 254,
    "kind": "testFile",
    "name": "tests/events.spec.js",
    "content": "import Beloader from 'beloader';\n\ndescribe('Beloader events', function () {\n  it('should fire regular events', function () {\n    var spyItemadded = sinon.spy();\n    var spyBeforeprocess = sinon.spy();\n    var spyLoadstart = sinon.spy();\n    var spyLoadstarted = sinon.spy();\n    var spyLoad = sinon.spy();\n    var spyLoadend = sinon.spy();\n    var spyReady = sinon.spy();\n    var spyReady2 = sinon.spy();\n    var spyAfterprocess = sinon.spy();\n\n    var loader = new Beloader({\n      on: {\n        itemadded: spyItemadded,\n        beforeprocess: spyBeforeprocess,\n        afterprocess: spyAfterprocess\n      }\n    });\n\n    this.timeout(5000);\n\n    return loader\n      .fetch('json', {\n        url: 'https://reqres.in/api/users/2',\n        on: {\n          loadstart: spyLoadstart,\n          loadstarted: spyLoadstarted,\n          load: spyLoad,\n          loadend: spyLoadend,\n          ready: [spyReady, spyReady2]\n        }\n      })\n      .promise\n      .then(function (item) {\n        spyItemadded.called.should.be.true;\n        spyBeforeprocess.called.should.be.true;\n        spyLoadstart.called.should.be.true;\n        spyLoadstarted.called.should.be.true;\n        spyLoad.called.should.be.true;\n        spyLoadend.called.should.be.true;\n        spyReady.called.should.be.true;\n        spyReady2.called.should.be.true;\n        spyAfterprocess.called.should.be.true;\n      });\n  });\n\n  it('should prevent default', function () {\n    var loader = new Beloader({\n      on: {\n        load: function pre(ev) {\n          ev.preventDefault();\n        }\n      }\n    });\n\n    return loader\n      .fetch('json', 'https://reqres.in/api/users/2?4155s')\n      .promise.then((item) => {\n        expect(loader.progress.data.items.loaded).to.equal(0);\n      });\n  });\n\n  it('should stop propagation', function () {\n    var spy = sinon.spy();\n    var loader = new Beloader({\n      on: {\n        load: spy\n      }\n    });\n\n    return loader\n      .fetch('json', {\n        url: 'https://reqres.in/api/users/2',\n        on: {\n          load: (event) => event.stopPropagation()\n        }\n      }).promise.then(() => {\n        spy.called.should.be.false;\n      });\n  });\n\n  it('should stop immediate propagation post', function () {\n    var spy = sinon.spy();\n    var loader = new Beloader();\n\n    return loader\n      .fetch('json', {\n        url: 'https://reqres.in/api/users/2',\n        on: {\n          load: [\n            event => event.stopImmediatePropagation(),\n            event => spy()\n          ]\n        }\n      }).promise.then(() => {\n        spy.called.should.be.false;\n      });\n  });\n\n  it('should stop immediate propagation pre/post', function () {\n    var spy = sinon.spy();\n    var loader = new Beloader();\n\n    return loader\n      .fetch('json', {\n        url: 'https://reqres.in/api/users/2',\n        on: {\n          ready: [\n            function pre(event) { event.stopImmediatePropagation(); },\n            event => spy()\n          ]\n        }\n      }).promise.then(() => {\n        spy.called.should.be.false;\n      });\n  });\n\n  it('should stop immediate propagation pre', function () {\n    var spy = sinon.spy();\n    var loader = new Beloader();\n\n    return loader\n      .fetch('json', {\n        url: 'https://reqres.in/api/users/2',\n        on: {\n          ready: [\n            function pre(event) { event.stopImmediatePropagation(); },\n            function pre(event) { spy(); }\n          ]\n        }\n      }).promise.then(() => {\n        spy.called.should.be.false;\n      });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/events.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "tests/events.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/events.spec.js~describe28",
    "access": null,
    "description": "Beloader events",
    "lineNumber": 3
  },
  {
    "__docId__": 256,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "tests/events.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe28.it29",
    "access": null,
    "description": "should fire regular events",
    "lineNumber": 4
  },
  {
    "__docId__": 257,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "tests/events.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe28.it30",
    "access": null,
    "description": "should prevent default",
    "lineNumber": 50
  },
  {
    "__docId__": 258,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "tests/events.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe28.it31",
    "access": null,
    "description": "should stop propagation",
    "lineNumber": 66
  },
  {
    "__docId__": 259,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "tests/events.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe28.it32",
    "access": null,
    "description": "should stop immediate propagation post",
    "lineNumber": 85
  },
  {
    "__docId__": 260,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "tests/events.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe28.it33",
    "access": null,
    "description": "should stop immediate propagation pre/post",
    "lineNumber": 103
  },
  {
    "__docId__": 261,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "tests/events.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "tests/events.spec.js~describe28.it34",
    "access": null,
    "description": "should stop immediate propagation pre",
    "lineNumber": 121
  },
  {
    "__docId__": 262,
    "kind": "testFile",
    "name": "tests/fontloader.spec.js",
    "content": "import {Beloader} from 'beloader';\r\n\r\ndescribe('Font loader tests', function () {\r\n  it('should throw an exception if no webfont object provided', function () {\r\n    var loader = new Beloader();\r\n\r\n    return loader.fetch('font').promise['catch'](err => {\r\n      err.should.be.instanceof(TypeError);\r\n    });\r\n  });\r\n\r\n  it('should throw an exception if async option is false', function () {\r\n    var loader = new Beloader();\r\n    var p = loader.fetch('font', {\r\n      async: false,\r\n      webfont: {\r\n        google: {\r\n          families: ['Droid Sans', 'Droid Serif']\r\n        }\r\n      }\r\n    }).promise;\r\n\r\n    return p['catch'](item => {\r\n      item.error.should.be.instanceof(TypeError);\r\n    });\r\n  });\r\n\r\n  it('should fail loading', function () {\r\n    var loader = new Beloader();\r\n    var p = loader.fetch('font', {\r\n      webfont: {\r\n        timeout: 1000,\r\n        google: {\r\n          families: ['Blap']\r\n        }\r\n      }\r\n    }).promise;\r\n\r\n    return p['catch'](item => {\r\n      item.state.error.should.be.true;\r\n    });\r\n  });\r\n\r\n  it('should run callbacks for webfont', function () {\r\n    var loader = new Beloader();\r\n    var spy1 = sinon.spy(function spy1() {});\r\n    var spy2 = sinon.spy(function spy2() {});\r\n    var spy3 = sinon.spy(function spy3() {});\r\n    var p = loader.fetch('font', {\r\n      webfont: {\r\n        google: {\r\n          families: ['Droid Sans', 'Droid Serif']\r\n        },\r\n        loading: spy1,\r\n        active: spy2,\r\n        inactive: spy3\r\n      }\r\n    }).promise;\r\n\r\n    return p.then(item => {\r\n      spy1.called.should.be.true;\r\n      spy2.called.should.be.true;\r\n      spy3.called.should.be.false;\r\n    });\r\n  });\r\n\r\n  it('should fail loading and run callbacks for webfont', function () {\r\n    var loader = new Beloader();\r\n    var spy1 = sinon.spy(function spy1() {});\r\n    var spy2 = sinon.spy(function spy2() {});\r\n    var spy3 = sinon.spy(function spy3() {});\r\n    var p = loader.fetch('font', {\r\n      webfont: {\r\n        google: {\r\n          families: ['Blap']\r\n        },\r\n        timeout: 1000,\r\n        loading: spy1,\r\n        active: spy2,\r\n        inactive: spy3\r\n      }\r\n    }).promise;\r\n\r\n    return p['catch'](item => {\r\n      spy1.called.should.be.true;\r\n      spy2.called.should.be.false;\r\n      spy3.called.should.be.true;\r\n    });\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/fontloader.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "tests/fontloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/fontloader.spec.js~describe35",
    "access": null,
    "description": "Font loader tests",
    "lineNumber": 3
  },
  {
    "__docId__": 264,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "tests/fontloader.spec.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "tests/fontloader.spec.js~describe35.it36",
    "access": null,
    "description": "should throw an exception if no webfont object provided",
    "lineNumber": 4
  },
  {
    "__docId__": 265,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "tests/fontloader.spec.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "tests/fontloader.spec.js~describe35.it37",
    "access": null,
    "description": "should throw an exception if async option is false",
    "lineNumber": 12
  },
  {
    "__docId__": 266,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "tests/fontloader.spec.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "tests/fontloader.spec.js~describe35.it38",
    "access": null,
    "description": "should fail loading",
    "lineNumber": 28
  },
  {
    "__docId__": 267,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "tests/fontloader.spec.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "tests/fontloader.spec.js~describe35.it39",
    "access": null,
    "description": "should run callbacks for webfont",
    "lineNumber": 44
  },
  {
    "__docId__": 268,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "tests/fontloader.spec.js~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "tests/fontloader.spec.js~describe35.it40",
    "access": null,
    "description": "should fail loading and run callbacks for webfont",
    "lineNumber": 67
  },
  {
    "__docId__": 269,
    "kind": "testFile",
    "name": "tests/imageloader.spec.js",
    "content": "import Beloader from 'beloader';\n\ndescribe('Image loader', function () {\n  it('should initialize image container', function () {\n    var loader = new Beloader();\n    var img = loader.fetch('image', 'https://upload.wikimedia.org/wikipedia/commons/d/d9/Test.png');\n\n    return img.loaderReady.then(item => {\n      item.image.nodeName.should.equal('IMG');\n    });\n  });\n\n  it('should load image sync with attributes', function () {\n    var loader = new Beloader();\n    var img = loader.fetch('image', {\n      url: 'https://upload.wikimedia.org/wikipedia/commons/d/d9/Test.png',\n      async: false,\n      attributes: {\n        alt: 'fixture'\n      }\n    });\n\n    return img.promise.then(item => {\n      item.image.src.should.equal('https://upload.wikimedia.org/wikipedia/commons/d/d9/Test.png');\n      item.image.alt.should.equal('fixture');\n    });\n  });\n\n  it('should load image async as blob', function () {\n    var loader = new Beloader();\n\n    return loader.fetch('img', 'https://upload.wikimedia.org/wikipedia/commons/d/d9/Test.png')\n      .promise.then(item => {\n        item.image.src.split('blob:').length.should.equal(2);\n      });\n  });\n\n  it('should load image async as base64', function () {\n    var loader = new Beloader();\n\n    return loader.fetch('img', {\n      url: 'https://upload.wikimedia.org/wikipedia/commons/d/d9/Test.png',\n      base64: true\n    })\n      .promise.then(item => {\n        item.image.src.split('base64,').length.should.equal(2);\n      });\n  });\n\n  it('should throw an error', function () {\n    var loader = new Beloader();\n\n    expect(loader.fetch.bind('loader', 'img')).to.throw(TypeError);\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/imageloader.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "tests/imageloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/imageloader.spec.js~describe41",
    "access": null,
    "description": "Image loader",
    "lineNumber": 3
  },
  {
    "__docId__": 271,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "tests/imageloader.spec.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "tests/imageloader.spec.js~describe41.it42",
    "access": null,
    "description": "should initialize image container",
    "lineNumber": 4
  },
  {
    "__docId__": 272,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "tests/imageloader.spec.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "tests/imageloader.spec.js~describe41.it43",
    "access": null,
    "description": "should load image sync with attributes",
    "lineNumber": 13
  },
  {
    "__docId__": 273,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "tests/imageloader.spec.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "tests/imageloader.spec.js~describe41.it44",
    "access": null,
    "description": "should load image async as blob",
    "lineNumber": 29
  },
  {
    "__docId__": 274,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "tests/imageloader.spec.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "tests/imageloader.spec.js~describe41.it45",
    "access": null,
    "description": "should load image async as base64",
    "lineNumber": 38
  },
  {
    "__docId__": 275,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "tests/imageloader.spec.js~describe41",
    "testDepth": 1,
    "static": true,
    "longname": "tests/imageloader.spec.js~describe41.it46",
    "access": null,
    "description": "should throw an error",
    "lineNumber": 50
  },
  {
    "__docId__": 276,
    "kind": "testFile",
    "name": "tests/jsonloader.spec.js",
    "content": "import Beloader from 'beloader';\n\n/**\n*  @test {JsonLoader}\n*/\ndescribe('JsonLoader tests', function () {\n  it('should load JSON', function () {\n    var loader = new Beloader();\n\n    return loader\n      .fetch('json', 'https://reqres.in/api/users/2')\n      .promise\n      .then(function (item) {\n        item.response.should.eql({\n          data: {\n            'id': 2,\n            'first_name': 'Janet',\n            'last_name': 'Weaver',\n            'avatar': 'https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg'\n          }\n        });\n      },\n      function (item) {\n        console.log('error');\n      });\n  });\n\n  describe('JsonLoader errors', function () {\n\n    it('should throw a type error if no URL provided', function () {\n      var loader = new Beloader();\n\n      return loader.fetch('json').promise['catch'](error => {\n        error.should.be.instanceof(TypeError);\n      });\n    });\n\n    it('should throw a type error if sync method called', function () {\n      var loader = new Beloader();\n\n      return loader.fetch('json', 'https://reqres.in/api/users/2').promise.then(item => {\n        expect(item.loader.sync.bind(item.loader)).to.throw(TypeError);\n      });\n    });\n\n    it('should report a 404 error', function () {\n      var loader = new Beloader();\n\n      return loader.fetch('json', '/api/unknown/23').promise['catch'](item => {\n        item.error.should.be.equal(404);\n      });\n    });\n\n    it('should report a JSON syntax error', function () {\n      var loader = new Beloader();\n\n      return loader.fetch('json', 'https://cdn.jsdelivr.net/npm/elementify@latest').promise['catch'](item => {\n        item.state.error.should.be.true;\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/jsonloader.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "test",
    "name": "describe47",
    "testId": 47,
    "memberof": "tests/jsonloader.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/jsonloader.spec.js~describe47",
    "access": null,
    "description": "JsonLoader tests",
    "lineNumber": 6,
    "testTargets": [
      "JsonLoader"
    ]
  },
  {
    "__docId__": 278,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "tests/jsonloader.spec.js~describe47",
    "testDepth": 1,
    "static": true,
    "longname": "tests/jsonloader.spec.js~describe47.it48",
    "access": null,
    "description": "should load JSON",
    "lineNumber": 7
  },
  {
    "__docId__": 279,
    "kind": "test",
    "name": "describe49",
    "testId": 49,
    "memberof": "tests/jsonloader.spec.js~describe47",
    "testDepth": 1,
    "static": true,
    "longname": "tests/jsonloader.spec.js~describe47.describe49",
    "access": null,
    "description": "JsonLoader errors",
    "lineNumber": 28
  },
  {
    "__docId__": 280,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "tests/jsonloader.spec.js~describe47.describe49",
    "testDepth": 2,
    "static": true,
    "longname": "tests/jsonloader.spec.js~describe47.describe49.it50",
    "access": null,
    "description": "should throw a type error if no URL provided",
    "lineNumber": 30
  },
  {
    "__docId__": 281,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "tests/jsonloader.spec.js~describe47.describe49",
    "testDepth": 2,
    "static": true,
    "longname": "tests/jsonloader.spec.js~describe47.describe49.it51",
    "access": null,
    "description": "should throw a type error if sync method called",
    "lineNumber": 38
  },
  {
    "__docId__": 282,
    "kind": "test",
    "name": "it52",
    "testId": 52,
    "memberof": "tests/jsonloader.spec.js~describe47.describe49",
    "testDepth": 2,
    "static": true,
    "longname": "tests/jsonloader.spec.js~describe47.describe49.it52",
    "access": null,
    "description": "should report a 404 error",
    "lineNumber": 46
  },
  {
    "__docId__": 283,
    "kind": "test",
    "name": "it53",
    "testId": 53,
    "memberof": "tests/jsonloader.spec.js~describe47.describe49",
    "testDepth": 2,
    "static": true,
    "longname": "tests/jsonloader.spec.js~describe47.describe49.it53",
    "access": null,
    "description": "should report a JSON syntax error",
    "lineNumber": 54
  },
  {
    "__docId__": 284,
    "kind": "testFile",
    "name": "tests/plugins.spec.js",
    "content": "const {Beloader} = require('beloader');\n\ndescribe('Plugins', function () {\n  it('should pluginize a function and call init', function () {\n    var loader = new Beloader();\n    var spy = sinon.spy();\n\n    var plugin = function () {\n      this.fixture = 'fixture';\n      this.init = function () {\n        spy();\n      };\n    };\n\n    loader.pluginize('plugin', plugin);\n    loader.plugin.fixture.should.equal('fixture');\n    spy.called.should.be.true;\n  });\n\n  it('should pluginize a singleton and call init', function () {\n    var loader = new Beloader();\n    var spy = sinon.spy();\n\n    var plugin = {\n      fixture: 'fixture',\n      init: function () {\n        spy();\n      }\n    };\n\n    loader.pluginize('plugin', plugin);\n    loader.plugin.fixture.should.equal('fixture');\n    spy.called.should.be.true;\n  });\n\n  it('should fail on pluginize with error', function () {\n    var loader = new Beloader();\n\n    var plugin = {\n      fixture: 'fixture',\n      init: function () {\n        spy(); // eslint-disable-line\n      }\n    };\n\n    expect(loader.pluginize.bind(loader, 'plugin', plugin)).to.throw(Error);\n  });\n\n  it('should throw an exception if name is missing', function () {\n    var loader = new Beloader();\n\n    return loader.fetch('plugin').promise['catch'](error => {\n      expect(error).to.be.instanceof(TypeError);\n    });\n  });\n\n  it('should propagate a plugin to item and loader', function () {\n    var loader = new Beloader();\n\n    var plugin = {\n      fixture: 'fixture'\n    };\n\n    loader.pluginize('plugin', plugin);\n\n    return loader.fetch('script', 'https://cdn.jsdelivr.net/npm/elementify@latest')\n      .promise.then(item => {\n        item.plugin.fixture.should.equal('fixture');\n        item.loader.plugin.fixture.should.equal('fixture');\n      });\n  });\n\n  it('should load plugin async from Beloader options with full options and alias', function () {\n    var loader = new Beloader({\n      plugins: {\n        name: 'animations',\n        url: 'https://rawgit.com/beloader/beloader-animations/master/dist/beloader-animations.min.js',\n        alias: 'ani'\n      }\n    });\n\n    this.timeout(5000);\n\n    return loader.ready.then(() => {\n      loader.ani.should.be.an('object');\n    });\n  });\n\n  it('should load plugin async from Beloader options with short call', function () {\n    var loader = new Beloader({\n      plugins: [\n        { animations: 'https://rawgit.com/beloader/beloader-animations/master/dist/beloader-animations.min.js' }\n      ]\n    });\n\n    return loader.ready.then(() => {\n      loader.animations.should.be.an('object');\n    });\n  });\n\n  it('should load plugin async and inline from Beloader options with short call', function () {\n    var loader = new Beloader({\n      inline: true,\n      plugins: [\n        { animations: 'https://rawgit.com/beloader/beloader-animations/master/dist/beloader-animations.min.js' }\n      ]\n    });\n\n    return loader.ready.then(() => {\n      loader.animations.should.be.an('object');\n    });\n  });\n\n  it('should load plugin sync from Beloader options with short call', function () {\n    var loader = new Beloader({\n      async: false,\n      plugins: [\n        { animations: 'https://rawgit.com/beloader/beloader-animations/master/dist/beloader-animations.min.js' }\n      ]\n    });\n\n    this.timeout(5000);\n\n    return loader.ready.then(() => {\n      loader.animations.should.be.an('object');\n    });\n  });\n\n  it('should wait for plugin ready promise', function () {\n    var p = {\n      init: function () {\n        this.promise = new Promise((resolve, reject) => {\n          setTimeout(resolve, 1000);\n        });\n      }\n    };\n    var loader = new Beloader();\n\n    loader.pluginize('p', p);\n\n    return loader.p.promise.then(() => {\n      loader.p.should.be.an('object');\n    });\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/plugins.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 285,
    "kind": "test",
    "name": "describe54",
    "testId": 54,
    "memberof": "tests/plugins.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54",
    "access": null,
    "description": "Plugins",
    "lineNumber": 3
  },
  {
    "__docId__": 286,
    "kind": "test",
    "name": "it55",
    "testId": 55,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it55",
    "access": null,
    "description": "should pluginize a function and call init",
    "lineNumber": 4
  },
  {
    "__docId__": 287,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it56",
    "access": null,
    "description": "should pluginize a singleton and call init",
    "lineNumber": 20
  },
  {
    "__docId__": 288,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it57",
    "access": null,
    "description": "should fail on pluginize with error",
    "lineNumber": 36
  },
  {
    "__docId__": 289,
    "kind": "test",
    "name": "it58",
    "testId": 58,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it58",
    "access": null,
    "description": "should throw an exception if name is missing",
    "lineNumber": 49
  },
  {
    "__docId__": 290,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it59",
    "access": null,
    "description": "should propagate a plugin to item and loader",
    "lineNumber": 57
  },
  {
    "__docId__": 291,
    "kind": "test",
    "name": "it60",
    "testId": 60,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it60",
    "access": null,
    "description": "should load plugin async from Beloader options with full options and alias",
    "lineNumber": 73
  },
  {
    "__docId__": 292,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it61",
    "access": null,
    "description": "should load plugin async from Beloader options with short call",
    "lineNumber": 89
  },
  {
    "__docId__": 293,
    "kind": "test",
    "name": "it62",
    "testId": 62,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it62",
    "access": null,
    "description": "should load plugin async and inline from Beloader options with short call",
    "lineNumber": 101
  },
  {
    "__docId__": 294,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it63",
    "access": null,
    "description": "should load plugin sync from Beloader options with short call",
    "lineNumber": 114
  },
  {
    "__docId__": 295,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "tests/plugins.spec.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "tests/plugins.spec.js~describe54.it64",
    "access": null,
    "description": "should wait for plugin ready promise",
    "lineNumber": 129
  },
  {
    "__docId__": 296,
    "kind": "testFile",
    "name": "tests/publicpath.spec.js",
    "content": "import {check} from 'core/publicpath';\r\n\r\ndescribe('URI checker for CDN', function () {\r\n  it('should set wpp', function () {\r\n    check('http://cdn.io/beloader').should.equal('http://cdn.io/beloader/dist/');\r\n  });\r\n\r\n  it('should set wpp', function () {\r\n    check('http://cdn.io/beloader@latest').should.equal('http://cdn.io/beloader@latest/dist/');\r\n  });\r\n\r\n  it('should set wpp', function () {\r\n    check('http://cdn.io/beloader@1.2.3').should.equal('http://cdn.io/beloader@1.2.3/dist/');\r\n  });\r\n\r\n  it('should set wpp', function () {\r\n    check('http://cdn.io/beloader@latest/dist/beloader.min.js').should.equal('http://cdn.io/beloader@latest/dist/');\r\n  });\r\n\r\n  it('should return false', function () {\r\n    check('http://cdn.io/beloader-animations@latest').should.be.false;\r\n  });\r\n\r\n  it('should return false', function () {\r\n    check('file://beloader.js').should.be.false;\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/publicpath.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "test",
    "name": "describe65",
    "testId": 65,
    "memberof": "tests/publicpath.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/publicpath.spec.js~describe65",
    "access": null,
    "description": "URI checker for CDN",
    "lineNumber": 3
  },
  {
    "__docId__": 298,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "tests/publicpath.spec.js~describe65",
    "testDepth": 1,
    "static": true,
    "longname": "tests/publicpath.spec.js~describe65.it66",
    "access": null,
    "description": "should set wpp",
    "lineNumber": 4
  },
  {
    "__docId__": 299,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "tests/publicpath.spec.js~describe65",
    "testDepth": 1,
    "static": true,
    "longname": "tests/publicpath.spec.js~describe65.it67",
    "access": null,
    "description": "should set wpp",
    "lineNumber": 8
  },
  {
    "__docId__": 300,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "tests/publicpath.spec.js~describe65",
    "testDepth": 1,
    "static": true,
    "longname": "tests/publicpath.spec.js~describe65.it68",
    "access": null,
    "description": "should set wpp",
    "lineNumber": 12
  },
  {
    "__docId__": 301,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "tests/publicpath.spec.js~describe65",
    "testDepth": 1,
    "static": true,
    "longname": "tests/publicpath.spec.js~describe65.it69",
    "access": null,
    "description": "should set wpp",
    "lineNumber": 16
  },
  {
    "__docId__": 302,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "tests/publicpath.spec.js~describe65",
    "testDepth": 1,
    "static": true,
    "longname": "tests/publicpath.spec.js~describe65.it70",
    "access": null,
    "description": "should return false",
    "lineNumber": 20
  },
  {
    "__docId__": 303,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "tests/publicpath.spec.js~describe65",
    "testDepth": 1,
    "static": true,
    "longname": "tests/publicpath.spec.js~describe65.it71",
    "access": null,
    "description": "should return false",
    "lineNumber": 24
  },
  {
    "__docId__": 304,
    "kind": "testFile",
    "name": "tests/queueitem.spec.js",
    "content": "import {Beloader} from 'beloader';\nimport QueueItem from 'queueitem';\n\ndescribe('CSS Loader', function () {\n  it('should create an instance of a css loader', function () {\n    var loader = new Beloader();\n    var item = loader.fetch('css', {\n      url: 'https://fonts.googleapis.com/css?family=Poppins:900'\n    });\n\n    item.should.be.instanceof(QueueItem);\n  });\n});\n",
    "static": true,
    "longname": "F:/Projets/beloader/tastes/tests/queueitem.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 305,
    "kind": "test",
    "name": "describe72",
    "testId": 72,
    "memberof": "tests/queueitem.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "tests/queueitem.spec.js~describe72",
    "access": null,
    "description": "CSS Loader",
    "lineNumber": 4
  },
  {
    "__docId__": 306,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "tests/queueitem.spec.js~describe72",
    "testDepth": 1,
    "static": true,
    "longname": "tests/queueitem.spec.js~describe72.it73",
    "access": null,
    "description": "should create an instance of a css loader",
    "lineNumber": 5
  }
]